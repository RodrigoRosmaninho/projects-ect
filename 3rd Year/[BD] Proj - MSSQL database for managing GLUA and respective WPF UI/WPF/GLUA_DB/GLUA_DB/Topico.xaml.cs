using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace GLUA_DB
{
    /// <summary>
    /// Interaction logic for Topico.xaml
    /// </summary>
    public partial class Topico : Page
    {

        protected static int ID;
        protected MainWindow main;

        public Topico(int id)
        {
            InitializeComponent();
            ID = id;
            if (id >= 0) getTopicoByID();
            else Edit_Click(null, null);
        }

        private void Edit_Click(object sender, RoutedEventArgs e)
        {
            Nome_TextBox.IsReadOnly = false;
            Edit.Visibility = Visibility.Hidden;
            Delete.Visibility = Visibility.Hidden;
            Save.Visibility = Visibility.Visible;
            Cancel.Visibility = Visibility.Visible;

        }

        private void Delete_Click(object sender, RoutedEventArgs e)
        {
            Object[] values = { ID };
            DB.getDB().executeNonResultQuery("DELETE FROM TOPICO WHERE ID = {};", values);
            this.NavigationService.GoBack();
        }

        private void Save_Click(object sender, RoutedEventArgs e)
        {
            Object id = ID;
            if (ID < 0) id = DBNull.Value;
            Object[] values = { id, Nome_TextBox.Text };
            DB.getDB().executeNonResultQuery("EXEC ModifyTopico {}, {}", values);
            this.NavigationService.GoBack();
        }

        private void Cancel_Click(object sender, RoutedEventArgs e)
        {
            if (ID < 0)
            {
                this.NavigationService.GoBack();
                return;
            }
            getTopicoByID();
            Nome_TextBox.IsReadOnly = true;
            Edit.Visibility = Visibility.Visible;
            Delete.Visibility = Visibility.Visible;
            Save.Visibility = Visibility.Hidden;
            Cancel.Visibility = Visibility.Hidden;
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            this.NavigationService.GoBack();
        }


        private void getTopicoByID()
        {
            string queryString =
                "SELECT * FROM TOPICOS WHERE ID = "+ ID +";";

            using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
            {
                using (var cmd = new SqlCommand(queryString, cn))
                {
                    cn.Open();
                    var reader = cmd.ExecuteReader();

                    reader.Read();
                    Nome_TextBox.Text = reader["Nome"].ToString();
                    NProblemas_TextBox.Text = reader["problemas_num"].ToString();
                }
            }
        }

        private void VerProblemas_Click(object sender, RoutedEventArgs e)
        {
            void TopicsListDataGrid_AutoGeneratedColumns(object s, EventArgs ea)
            {
                getMain().TopicsListDataGrid.Columns[0].Visibility = Visibility.Hidden;
            }

            MainWindow.FlyoutPage = this;
            getMain().TopicsListDataGrid.AutoGeneratedColumns += TopicsListDataGrid_AutoGeneratedColumns;
            getMain().TopicsListDataGrid.ItemsSource = getProblemsListByTopicID(ID);
            getMain().TopicsListFlyout.IsOpen = true;
        }

        private DataView getProblemsListByTopicID(int id)
        {
            string queryString = "SELECT * FROM dbo.getProblemsByTopic( @Nome ) ORDER BY atendimentos_num DESC;";


            using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
            {
                using (var cmd = new SqlCommand(queryString, cn))
                {
                    cn.Open();
                    cmd.Parameters.AddWithValue("@Nome", Nome_TextBox.Text);
                    var reader = cmd.ExecuteReader();

                    var dt = new DataTable();

                    DataColumn[] dc = new DataColumn[] { new DataColumn("ID", typeof(int)),  new DataColumn("Descricao", typeof(string)), new DataColumn("Atendimentos", typeof(int)), new DataColumn("Resolvidos", typeof(int)), new DataColumn("SO", typeof(string)), new DataColumn("Versao", typeof(string)), new DataColumn("Fabricante", typeof(string)), new DataColumn("Modelo", typeof(string)) };
                    dt.Columns.AddRange(dc);

                    while (reader.Read())
                    {
                        DataRow row = dt.NewRow();
                        row["ID"] = Convert.ToInt32(reader["ID"]);
                        row["Descricao"] = reader["Descricao"].ToString();
                        row["SO"] = reader["SO"].ToString();
                        row["Versao"] = reader["Versao"].ToString();
                        row["Fabricante"] = reader["Fabricante"].ToString();
                        row["Modelo"] = reader["Modelo"].ToString();
                        row["Atendimentos"] = reader["atendimentos_num"].ToString();
                        row["Resolvidos"] = reader["resolucoes_num"].ToString();
                        dt.Rows.Add(row);
                    }

                    return dt.DefaultView;
                }
            }
        }

        private MainWindow getMain()
        {
            if (main == null)
            {
                main = ((MainWindow)Window.GetWindow(this));
            }
            return main;
        }

    }
}
