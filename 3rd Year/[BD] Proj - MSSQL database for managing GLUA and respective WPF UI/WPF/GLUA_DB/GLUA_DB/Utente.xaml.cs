using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace GLUA_DB
{
    /// <summary>
    /// Interaction logic for Utente.xaml
    /// </summary>
    public partial class Utente : Page
    {
        protected static int ID;
        protected MainWindow main;

        public Utente(int id)
        {
            InitializeComponent();
            ID = id;
            if (id < 0)
            {
                Nome_TextBox.IsReadOnly = false;
                Contacto_TextBox.IsReadOnly = false;
                Notas_TextBox.IsReadOnly = false;
                Edit.Visibility = Visibility.Hidden;
                Delete.Visibility = Visibility.Hidden;
                showLastSession.Visibility = Visibility.Hidden;
                showProblems.Visibility = Visibility.Hidden;
                showSessions.Visibility = Visibility.Hidden;
                createUtente.Visibility = Visibility.Visible;

                No_Radio.IsChecked = true;

                NMec_label.Visibility = Visibility.Hidden;
                NMec.Visibility = Visibility.Hidden;
                DataMatricula_label.Visibility = Visibility.Hidden;
                DataMatricula.Visibility = Visibility.Hidden;
                Departamento_label.Visibility = Visibility.Hidden;
                Departamento.Visibility = Visibility.Hidden;
                Curso_label.Visibility = Visibility.Hidden;
                Curso.Visibility = Visibility.Hidden;
                add_curso.Visibility = Visibility.Hidden;

                getDepartment();
            }
            else
            {
                Nome_TextBox.IsReadOnly = true;
                Contacto_TextBox.IsReadOnly = true;
                Notas_TextBox.IsReadOnly = true;
                NMec.IsReadOnly = true;
                DataMatricula.Focusable = false;
                DataMatricula.IsHitTestVisible = false;
                Departamento.IsEnabled = false;
                Curso.IsEnabled = false;
                Yes_Radio.IsEnabled = false;
                No_Radio.IsEnabled = false;
                add_curso.IsEnabled = false;

                Edit.Visibility = Visibility.Visible;
                Delete.Visibility = Visibility.Visible;
                showLastSession.Visibility = Visibility.Visible;
                showProblems.Visibility = Visibility.Visible;
                showSessions.Visibility = Visibility.Visible;
                createUtente.Visibility = Visibility.Hidden;
                getUtenteByID(id);
                Curso.IsEnabled = false;
            }
            
        }

        private MainWindow getMain()
        {
            if (main == null)
            {
                main = ((MainWindow)Window.GetWindow(this));
            }
            return main;
        }


        private void showCreateCurso_Click(object sender, RoutedEventArgs e)
        {
            String queryString = "SELECT DISTINCT Departamento FROM Curso";

            using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
            {
                using (var cmd = new SqlCommand(queryString, cn))
                {
                    cn.Open();
                    var reader = cmd.ExecuteReader();

                    getMain().Departamento.Items.Clear();

                    while (reader.Read())
                    {
                        getMain().Departamento.Items.Add(reader["Departamento"].ToString());
                    }

                    reader.Close();
                }
            }
            getMain().nonExistingDep.IsChecked = true;
            getMain().Departamento.Visibility = Visibility.Hidden;
            MainWindow.FlyoutPage = this;
            MainWindow.Page_label = "Utente";
            getMain().utenteCreateCursoFlyout.IsOpen = true;
        }

        private void showLastSession_Click(object sender, RoutedEventArgs e)
        {
            void utenteLastSessionDataGrid_AutoGeneratedColumns(object s, EventArgs ea)
            {
                getMain().utenteLastSessionDataGrid.Columns[0].Visibility = Visibility.Hidden;
            }

            MainWindow.FlyoutPage = this;
            getMain().utenteLastSessionDataGrid.AutoGeneratedColumns += utenteLastSessionDataGrid_AutoGeneratedColumns;
            getMain().utenteLastSessionDataGrid.ItemsSource = getLastSessionByMembroID(ID);
            getMain().utenteLastSessionFlyout.IsOpen = true;
        }

        private void showProblems_Click(object sender, RoutedEventArgs e)
        {
            void utenteProblemsDataGrid_AutoGeneratedColumns(object s, EventArgs ea)
            {
                getMain().utenteProblemsDataGrid.Columns[0].Visibility = Visibility.Hidden;
            }

            MainWindow.FlyoutPage = this;
            getMain().utenteProblemsDataGrid.AutoGeneratedColumns += utenteProblemsDataGrid_AutoGeneratedColumns;
            getMain().utenteProblemsDataGrid.ItemsSource = getAllProblemsByMembroID(ID);
            getMain().utenteProblemsFlyout.IsOpen = true;
        }

        private void showSessions_Click(object sender, RoutedEventArgs e)
        {
            void utenteSessionListDataGrid_AutoGeneratedColumns(object s, EventArgs ea)
            {
                getMain().utenteSessionListDataGrid.Columns[0].Visibility = Visibility.Hidden;
            }

            MainWindow.FlyoutPage = this;
            getMain().utenteSessionListDataGrid.AutoGeneratedColumns += utenteSessionListDataGrid_AutoGeneratedColumns;
            getMain().utenteSessionListDataGrid.ItemsSource = getAllSessionByMembroID(ID);
            getMain().utenteSessionListFlyout.IsOpen = true;
        }

        private void createUtente_Click(object sender, RoutedEventArgs e)
        {
            String isStudent = "false";
            Object Nmec = DBNull.Value;
            Object curso = DBNull.Value;
            Object date = DBNull.Value;
            if (Yes_Radio.IsChecked == true)
            {
                isStudent = "true";
                Nmec = Convert.ToInt32(NMec.Text);
                curso = (String)Curso.SelectedItem;
                date = DataMatricula.SelectedDate;

            }
            Object[] values = { DBNull.Value, Nome_TextBox.Text, Notas_TextBox.Text, Contacto_TextBox.Text, isStudent, Nmec, curso, date};
            DB.getDB().executeNonResultQuery("EXEC ModifyUtente {}, {}, {}, {}, {}, {}, {}, {}", values);

            this.NavigationService.GoBack();
        }

        private void Yes_Radio_Checked(object sender, RoutedEventArgs e)
        {
            NMec_label.Visibility = Visibility.Visible;
            NMec.Visibility = Visibility.Visible;
            DataMatricula_label.Visibility = Visibility.Visible;
            DataMatricula.Visibility = Visibility.Visible;
            Departamento_label.Visibility = Visibility.Visible;
            Departamento.Visibility = Visibility.Visible;
            Curso_label.Visibility = Visibility.Visible;
            Curso.Visibility = Visibility.Visible;
            add_curso.Visibility = Visibility.Visible;

        }

        private void No_Radio_Checked(object sender, RoutedEventArgs e)
        {
            NMec_label.Visibility = Visibility.Hidden;
            NMec.Visibility = Visibility.Hidden;
            DataMatricula_label.Visibility = Visibility.Hidden;
            DataMatricula.Visibility = Visibility.Hidden;
            Departamento_label.Visibility = Visibility.Hidden;
            Departamento.Visibility = Visibility.Hidden;
            Curso_label.Visibility = Visibility.Hidden;
            Curso.Visibility = Visibility.Hidden;
            add_curso.Visibility = Visibility.Hidden;
        }

        private void Departamento_ComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            String Dep = (String)Departamento.SelectedItem;
            Curso.IsEnabled = false;

            string queryString =
                "SELECT * FROM getCoursesByDepName ( @Dep );";

            using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
            {
                using (var cmd = new SqlCommand(queryString, cn))
                {
                    cn.Open();
                    cmd.Parameters.AddWithValue("@Dep", Dep);

                    var reader = cmd.ExecuteReader();

                    Curso.Items.Clear();

                    while (reader.Read())
                    {
                        if (reader["Sigla"].ToString() != "") Curso.Items.Add(reader["Sigla"].ToString());
                    }
                }
            }

            if (Curso.Items.Count > 0)
            {
                Curso.IsEnabled = true;
            }
        }

        public void getDepartment()
        {
            String queryString = "SELECT DISTINCT Departamento FROM Curso";

            using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
            {
                using (var cmd = new SqlCommand(queryString, cn))
                {
                    cn.Open();
                    var reader = cmd.ExecuteReader();

                    Departamento.Items.Clear();

                    while (reader.Read())
                    {
                        Departamento.Items.Add(reader["Departamento"].ToString());
                    }

                    reader.Close();
                }
            }
        }

        private void getUtenteByID(int id)
        {
            int isStudent = 0;

            string queryString =
                "SELECT * FROM getUtenteByID ("+ id+");";

            using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
            {
                using (var cmd = new SqlCommand(queryString, cn))
                {
                    cn.Open();
                    var reader = cmd.ExecuteReader();

                    reader.Read();
                    Nome_TextBox.Text = reader["Nome"].ToString();
                    Contacto_TextBox.Text = reader["Contacto"].ToString();
                    Notas_TextBox.Text = reader["Notas"].ToString();
                }
            }

            queryString = "SELECT DISTINCT Departamento FROM Curso";

            using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
            {
                using (var cmd = new SqlCommand(queryString, cn))
                {
                    cn.Open();
                    var reader = cmd.ExecuteReader();

                    Departamento.Items.Clear();

                    while (reader.Read())
                    {
                        Departamento.Items.Add(reader["Departamento"].ToString());
                    }

                    reader.Close();
                }
            }


            queryString =
               "SELECT dbo.isPersonAlsoStudent(" + id + ");";

            using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
            {
                using (var cmd = new SqlCommand(queryString, cn))
                {
                    cn.Open();
                    isStudent = (int) cmd.ExecuteScalar();

                    if (isStudent == 1)
                    {
                        Yes_Radio.IsChecked = true;

                        NMec_label.Visibility = Visibility.Visible;
                        NMec.Visibility = Visibility.Visible;
                        DataMatricula_label.Visibility = Visibility.Visible;
                        DataMatricula.Visibility = Visibility.Visible;
                        Departamento_label.Visibility = Visibility.Visible;
                        Departamento.Visibility = Visibility.Visible;
                        Curso_label.Visibility = Visibility.Visible;
                        Curso.Visibility = Visibility.Visible;


                    }
                    else
                    {
                        No_Radio.IsChecked = true;

                        NMec_label.Visibility = Visibility.Hidden;
                        NMec.Visibility = Visibility.Hidden;
                        DataMatricula_label.Visibility = Visibility.Hidden;
                        DataMatricula.Visibility = Visibility.Hidden;
                        Departamento_label.Visibility = Visibility.Hidden;
                        Departamento.Visibility = Visibility.Hidden;
                        Curso_label.Visibility = Visibility.Hidden;
                        Curso.Visibility = Visibility.Hidden;
                    }
                }
            }
            
           if(isStudent == 1)
            {
                queryString =
                "SELECT * FROM getStudentByID (" + id + ");";

                using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
                {
                    using (var cmd = new SqlCommand(queryString, cn))
                    {
                        cn.Open();
                        var reader = cmd.ExecuteReader();

                        reader.Read();
                        NMec.Text = reader["Nmec"].ToString();
                        Departamento.SelectedIndex = Departamento.Items.IndexOf(reader["Departamento"].ToString());
                        Curso.SelectedIndex = Curso.Items.IndexOf(reader["Curso"].ToString());
                        DataMatricula.SelectedDate = Convert.ToDateTime(reader["Ano_matricula"]);
                    }
                }
            }
           
        }



        private void Button_Click(object sender, RoutedEventArgs e)
        {
            this.NavigationService.GoBack();
        }

        private void Edit_Click(object sender, RoutedEventArgs e)
        {
            Nome_TextBox.IsReadOnly = false;
            Contacto_TextBox.IsReadOnly = false;
            Notas_TextBox.IsReadOnly = false;
            NMec.IsReadOnly = false;
            DataMatricula.Focusable = true;
            DataMatricula.IsHitTestVisible = true;
            Departamento.IsEnabled = true;
            Curso.IsEnabled = true;
            Edit.Visibility = Visibility.Hidden;
            Delete.Visibility = Visibility.Hidden;
            Save.Visibility = Visibility.Visible;
            Cancel.Visibility = Visibility.Visible;
            showLastSession.IsEnabled = false;
            showProblems.IsEnabled = false;
            showSessions.IsEnabled = false;
            Yes_Radio.IsEnabled = true;
            No_Radio.IsEnabled = true;
            add_curso.IsEnabled = true;
        }

        private void Delete_Click(object sender, RoutedEventArgs e)
        {
            DeleteUtente();
            this.NavigationService.GoBack();
        }

        private void Cancel_Click(object sender, RoutedEventArgs e)
        {
            Nome_TextBox.IsReadOnly = true;
            Contacto_TextBox.IsReadOnly = true;
            Notas_TextBox.IsReadOnly = true;
            NMec.IsReadOnly = true;
            DataMatricula.Focusable = false;
            DataMatricula.IsHitTestVisible = false;
            Departamento.IsEnabled = false;
            Curso.IsEnabled = false;
            Edit.Visibility = Visibility.Visible;
            Delete.Visibility = Visibility.Visible;
            Save.Visibility = Visibility.Hidden;
            Cancel.Visibility = Visibility.Hidden;
            showLastSession.IsEnabled = true;
            showProblems.IsEnabled = true;
            showSessions.IsEnabled = true;
            Yes_Radio.IsEnabled = false;
            No_Radio.IsEnabled = false;
            add_curso.IsEnabled = false;
            getUtenteByID(ID);
        }

        private void Save_Click(object sender, RoutedEventArgs e)
        {
            String isStudent = "false";
            int Nmec = 0;
            String curso = "";
            DateTime? date = new DateTime(2015, 12 ,25);
            if (Yes_Radio.IsChecked == true)
            {
                isStudent = "true";
                Nmec = Convert.ToInt32(NMec.Text);
                curso = (String)Curso.SelectedItem;
                date = DataMatricula.SelectedDate;

            }

            Object[] values = { ID, Nome_TextBox.Text, Notas_TextBox.Text, Contacto_TextBox.Text, isStudent, Nmec, curso, date};
            DB.getDB().executeNonResultQuery("EXEC ModifyUtente {}, {}, {}, {}, {}, {}, {}, {}", values);

            Nome_TextBox.IsReadOnly = true;
            Contacto_TextBox.IsReadOnly = true;
            Notas_TextBox.IsReadOnly = true;
            NMec.IsReadOnly = true;
            DataMatricula.Focusable = false;
            DataMatricula.IsHitTestVisible = false;
            Departamento.IsEnabled = false;
            Curso.IsEnabled = false;
            Edit.Visibility = Visibility.Visible;
            Delete.Visibility = Visibility.Visible;
            Save.Visibility = Visibility.Hidden;
            Cancel.Visibility = Visibility.Hidden;
            showLastSession.IsEnabled = true;
            showProblems.IsEnabled = true;
            showSessions.IsEnabled = true;
            Yes_Radio.IsEnabled = false;
            No_Radio.IsEnabled = false;
            add_curso.IsEnabled = false;
        }


        private DataView getLastSessionByMembroID(int ID)
        {
            string queryString = "SELECT * FROM getLastAtendimentoByUtenteID (" +ID+ ") ORDER BY Data";


            using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
            {
                using (var cmd = new SqlCommand(queryString, cn))
                {
                    cn.Open();
                    var reader = cmd.ExecuteReader();

                    var dt = new DataTable();

                    DataColumn[] dc = new DataColumn[] { new DataColumn("ID", typeof(int)), new DataColumn("Data", typeof(string)), new DataColumn("Fabricante", typeof(string)), new DataColumn("Modelo", typeof(string)) };
                    dt.Columns.AddRange(dc);

                    while (reader.Read())
                    {
                        DataRow row = dt.NewRow();
                        row["ID"] = reader["Atendimento_ID"].ToString();
                        row["Data"] = reader["Data"].ToString();
                        row["Fabricante"] = reader["Fabricante"].ToString();
                        row["Modelo"] = reader["Modelo"].ToString();
                        dt.Rows.Add(row);
                    }

                    return dt.DefaultView;
                }
            }
        }


        private DataView getAllProblemsByMembroID(int ID)
        {
            string queryString = "SELECT * FROM getProblemsByUtenteID ("+ ID+")";


            using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
            {
                using (var cmd = new SqlCommand(queryString, cn))
                {
                    cn.Open();
                    var reader = cmd.ExecuteReader();

                    var dt = new DataTable();

                    DataColumn[] dc = new DataColumn[] { new DataColumn("ID", typeof(int)), new DataColumn("Data", typeof(string)), new DataColumn("Descricao", typeof(string)), new DataColumn("Fabricante", typeof(string)), new DataColumn("Modelo", typeof(string)) };
                    dt.Columns.AddRange(dc);

                    while (reader.Read())
                    {
                        DataRow row = dt.NewRow();
                        row["ID"] = reader["Problema_ID"].ToString();
                        row["Data"] = reader["Data"].ToString();
                        row["Descricao"] = reader["Descricao"].ToString();
                        row["Fabricante"] = reader["Fabricante"].ToString();
                        row["Modelo"] = reader["Modelo"].ToString();
                        dt.Rows.Add(row);
                    }

                    return dt.DefaultView;
                }
            }
        }


        private DataView getAllSessionByMembroID(int ID)
        {
            string queryString = "SELECT * FROM getAtendimentosListByUtenteID ("+ ID+ ") ORDER BY Data;";


            using (SqlConnection cn = new SqlConnection(DB.getDB().getConnectionString()))
            {
                using (var cmd = new SqlCommand(queryString, cn))
                {
                    cn.Open();
                    var reader = cmd.ExecuteReader();

                    var dt = new DataTable();

                    DataColumn[] dc = new DataColumn[] { new DataColumn("ID", typeof(int)), new DataColumn("Data", typeof(string)), new DataColumn("Fabricante", typeof(string)), new DataColumn("Modelo", typeof(string)) };
                    dt.Columns.AddRange(dc);

                    while (reader.Read())
                    {
                        DataRow row = dt.NewRow();
                        row["ID"] = reader["Atendimento_ID"].ToString();
                        row["Data"] = reader["Data"].ToString();
                        row["Fabricante"] = reader["Fabricante"].ToString();
                        row["Modelo"] = reader["Modelo"].ToString();
                        dt.Rows.Add(row);
                    }

                    return dt.DefaultView;
                }
            }
        }

        private static void DeleteUtente()
        {
            String[] values = { ID.ToString() };
            DB.getDB().executeNonResultQuery("DELETE FROM UTENTE WHERE ID = {};", values);
        }


        private static String getTentativaEstado(int tipo)
        {
            switch (tipo)
            {
                case 0:
                    return "Bem Sucedido";
                case 1:
                    return "Mal Sucedido";
                case 2:
                    return "Melhoria Parcial";
                default:
                    return "";
            }
        }

    }
}
