apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nginx
  namespace: code-ua
spec:
  replicas: 2
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: RollingUpdate
  serviceName: nginx
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: 10.110.0.3:5000/codeua-nginx:1.20
        resources:
          limits:
            memory: "512Mi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - "[[ $(curl -s -I -o /dev/null -w '%{http_code}' http://gitlab.code-ua/-/liveness) -eq 200 ]]"
          initialDelaySeconds: 5 
          periodSeconds: 10
          timeoutSeconds: 10
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-www-data
          mountPath: /var/www/static
        - name: nginx-conf
          mountPath: /etc/nginx
        - name: varlog
          mountPath: /var/log
      - name: fluentd-agent
        image: 10.110.0.3:5000/codeua-fluentd
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: config-volume
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
      - name: exporter
        image: 10.110.0.3:5000/codeua-nginx-exporter:latest
        ports:
        - containerPort: 9113
        env:
        - name: SCRAPE_URI
          value: http://127.0.0.1:80/nginx_status
      volumes:
      - name: varlog
        emptyDir: {}
      - name: config-volume
        configMap:
          name: nginx-fluentd-config
      - name: nginx-www-data
      - name: nginx-conf
        configMap:
          name: nginx-conf-map
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: code-ua
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: nginx
  namespace: code-ua
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: code-ua.k3s
    http:
      paths:
      - path: /
        backend:
          serviceName: nginx
          servicePort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf-map
  namespace: code-ua
data:
  nginx.conf: |
    user nginx;
    worker_processes 1;

    # error_log  /var/log/nginx/error.log warn;
    error_log   /dev/null   crit;
    pid        /var/run/nginx.pid;

    events {
      worker_connections  4096;
    }

    http {
      # upstream gitlab-pods {
      #   # least_conn;
      #   # server gitlab-0.gitlab.code-ua;
      #   # server gitlab-1.gitlab.code-ua;
      #   # server gitlab-2.gitlab.code-ua;
      # }

      # upstream gitlab-grafana {
      #   # least_conn;
      #   # server gitlab-0.gitlab.code-ua:3000;
      #   # server gitlab-1.gitlab.code-ua:3000;
      #   # server gitlab-2.gitlab.code-ua:3000;
      # }

      sendfile      on;

      proxy_cache_path  /var/cache/nginx/proxy_cache  levels=1:2    keys_zone=STATIC:10m
                      inactive=24h  max_size=1g;

      server {
        listen *:80;
        server_name code-ua.k3s;

        client_max_body_size 250m;

        access_log  /var/log/gitlab_access.log;
        error_log   /var/log/gitlab_error.log;
        
        gzip on;
        gunzip on;
        gzip_types      text/plain application/xml;
        gzip_proxied    no-cache no-store private expired auth;
        gzip_min_length 1000;

        if ($http_host = "") {
          set $http_host_with_default "code-ua.k3s";
        }

        if ($http_host != "") {
          set $http_host_with_default $http_host;
        }

        location / {
          gzip_static             on;

          proxy_read_timeout      3600;
          proxy_connect_timeout   300;
          proxy_redirect          off;

          # Do not buffer Git HTTP responses
          proxy_buffering off;

          proxy_set_header    Host                $http_host_with_default;
          proxy_set_header    X-Real-IP           $remote_addr;
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
          proxy_set_header    X-Forwarded-Proto   $scheme;

          proxy_cache            STATIC;
          proxy_cache_valid      200  1d;
          proxy_cache_use_stale  error timeout invalid_header updating
                                  http_500 http_502 http_503 http_504;

          proxy_pass http://gitlab.code-ua;

          # proxy_request_buffering off;
          proxy_http_version 1.1;
        }

        location /nginx_status {
          stub_status;
          allow 127.0.0.1;    #allow requests from localhost
          allow 10.0.0.0/16;
          deny all;        #deny all other hosts
        }

        location /-/grafana/ {
          proxy_pass http://gitlab.code-ua:3000;
        }
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-fluentd-config
  namespace: code-ua
data:
  fluent.conf: |
    <source>
      type tail
      format none
      path /var/log/*access.log
      pos_file /var/log/*access.log.pos
      tag nginx-access
    </source>

    <source>
      type tail
      format none
      path /var/log/*error.log
      pos_file /var/log/*error.log.pos
      tag nginx-error
    </source>

    <filter **>
      @type record_transformer
      <record>
        hostname "#{Socket.gethostname}"
        tag ${tag}
      </record>
    </filter>

    <match **>
      @type elasticsearch
      host 10.110.4.80
      port 9200
      logstash_format true
    </match>
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa
  namespace: code-ua
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: nginx
  minReplicas: 2
  maxReplicas: 4
  metrics:
  - type: Pods
    pods:
      metricName: nginx_http_requests_per_second
      targetAverageValue: 10000