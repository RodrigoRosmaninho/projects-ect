###### GITALY SECRETS ######
apiVersion: v1
kind: Secret
metadata:
  name: gitaly-config
  namespace: code-ua
type: Opaque
stringData:
  gitlab.rb: |
    # Disable all other services on the Gitaly node
    postgresql['enable'] = false
    redis['enable'] = false
    nginx['enable'] = false
    grafana['enable'] = false
    puma['enable'] = false
    sidekiq['enable'] = false
    gitlab_workhorse['enable'] = false
    prometheus_monitoring['enable'] = false

    # Enable only the Gitaly service
    gitaly['enable'] = true

    # Enable Prometheus if needed
    prometheus['enable'] = false

    # Prevent database connections during 'gitlab-ctl reconfigure'
    gitlab_rails['rake_cache_clear'] = false
    gitlab_rails['auto_migrate'] = false
    
    # Make Gitaly accept connections on all network interfaces.
    # Use firewalls to restrict access to this address/port.
    gitaly['listen_addr'] = '0.0.0.0:8075'

    # Enable Prometheus metrics access to Gitaly. You must use firewalls
    # to restrict access to this address/port.
    gitaly['prometheus_listen_addr'] = '0.0.0.0:9236'

    gitaly['auth_token'] = 'PRAEFECT_INTERNAL_TOKEN'

    gitlab_shell['secret_token'] = '8e0e8fb5d101b186d291819af6313a4414d43d955865505673aa52ff207657685508ecc8d0887b9096a9025676b0eadea71708dd385440072a244408ba9da804'

    gitlab_rails['internal_api_url'] = 'http://gitlab.code-ua'

    gitlab_rails['object_store']['enabled'] = true
    gitlab_rails['object_store']['proxy_download'] = true
    gitlab_rails['object_store']['connection'] = {
      'provider' => 'AWS',
      'aws_access_key_id' => 'minio-codeua-gitlab-key',
      'aws_secret_access_key' => 'girs_code-ua2021',
      'endpoint' => 'http://minio-sidekick.code-ua:9000',
      'path_style' => true
    }

    gitlab_rails['object_store']['objects']['artifacts']['bucket'] = '<artifacts>'
    gitlab_rails['object_store']['objects']['external_diffs']['bucket'] = '<external-diffs>'
    gitlab_rails['object_store']['objects']['lfs']['bucket'] = '<lfs-objects>'
    gitlab_rails['object_store']['objects']['uploads']['bucket'] = '<uploads>'
    gitlab_rails['object_store']['objects']['packages']['bucket'] = '<packages>'
    gitlab_rails['object_store']['objects']['dependency_proxy']['bucket'] = '<dependency-proxy>'
    gitlab_rails['object_store']['objects']['terraform_state']['bucket'] = '<terraform-state>'
    gitlab_rails['object_store']['objects']['pages']['bucket'] = '<pages>'

    # You can include the data dirs for all nodes in the same config, because
    # Praefect will only route requests according to the addresses provided in the
    # prior step.
    git_data_dirs({
      "gitaly-1" => {
        "path" => "/var/opt/gitlab/git-data"
      },
      "gitaly-2" => {
        "path" => "/var/opt/gitlab/git-data"
      },
      "gitaly-3" => {
        "path" => "/var/opt/gitlab/git-data"
      }
    })
---
###### GITLAB SECRETS ######
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-config
  namespace: code-ua
type: Opaque
stringData:
  gitlab.rb: |
    ## GitLab configuration settings
    ##! This file is generated during initial installation and **is not** modified
    ##! during upgrades.
    ##! Check out the latest version of this file to know about the different
    ##! settings that can be configured, when they were introduced and why:
    ##! https://gitlab.com/gitlab-org/omnibus-gitlab/blame/master/files/gitlab-config-template/gitlab.rb.template

    ##! Locally, the complete template corresponding to the installed version can be found at:
    ##! /opt/gitlab/etc/gitlab.rb.template

    ##! You can run `gitlab-ctl diff-config` to compare the contents of the current gitlab.rb with
    ##! the gitlab.rb.template from the currently running version.

    ##! You can run `gitlab-ctl show-config` to display the configuration that will be generated by
    ##! running `gitlab-ctl reconfigure`

    ##! In general, the values specified here should reflect what the default value of the attribute will be.
    ##! There are instances where this behavior is not possible or desired. For example, when providing passwords,
    ##! or connecting to third party services.
    ##! In those instances, we endeavour to provide an example configuration.

    ## GitLab URL
    ##! URL on which GitLab will be reachable.
    ##! For more details on configuring external_url see:
    ##! https://docs.gitlab.com/omnibus/settings/configuration.html#configuring-the-external-url-for-gitlab
    ##!
    ##! Note: During installation/upgrades, the value of the environment variable
    ##! EXTERNAL_URL will be used to populate/replace this value.
    ##! On AWS EC2 instances, we also attempt to fetch the public hostname/IP
    ##! address from AWS. For more details, see:
    ##! https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html
    external_url 'https://code-ua.k3s'

    ## Roles for multi-instance GitLab
    ##! The default is to have no roles enabled, which results in GitLab running as an all-in-one instance.
    ##! Options:
    ##!   redis_sentinel_role redis_master_role redis_replica_role geo_primary_role geo_secondary_role
    ##!   postgres_role consul_role application_role monitoring_role
    ##! For more details on each role, see:
    ##! https://docs.gitlab.com/omnibus/roles/README.html#roles
    ##!
    ## roles ['application_role']

    ## Legend
    ##! The following notations at the beginning of each line may be used to
    ##! differentiate between components of this file and to easily select them using
    ##! a regex.
    ##! ## Titles, subtitles etc
    ##! ##! More information - Description, Docs, Links, Issues etc.
    ##! Configuration settings have a single # followed by a single space at the
    ##! beginning; Remove them to enable the setting.

    ##! **Configuration settings below are optional.**


    ################################################################################
    ################################################################################
    ##                Configuration Settings for GitLab CE and EE                 ##
    ################################################################################
    ################################################################################

    ################################################################################
    ## gitlab.yml configuration
    ##! Docs: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/gitlab.yml.md
    ################################################################################
    # gitlab_rails['gitlab_ssh_host'] = 'ssh.host_example.com'
    # gitlab_rails['gitlab_ssh_user'] = ''
    # gitlab_rails['time_zone'] = 'UTC'

    ### Request duration
    ###! Tells the rails application how long it has to complete a request
    ###! This value needs to be lower than the worker timeout set in unicorn/puma.
    ###! By default, we'll allow 95% of the the worker timeout
    # gitlab_rails['max_request_duration_seconds'] = 57

    ### GitLab email server settings
    ###! Docs: https://docs.gitlab.com/omnibus/settings/smtp.html
    ###! **Use smtp instead of sendmail/postfix.**

    gitlab_rails['smtp_enable'] = false
    # gitlab_rails['smtp_address'] = "smtp.server"
    # gitlab_rails['smtp_port'] = 465
    # gitlab_rails['smtp_user_name'] = "smtp user"
    # gitlab_rails['smtp_password'] = "smtp password"
    # gitlab_rails['smtp_domain'] = "example.com"
    # gitlab_rails['smtp_authentication'] = "login"
    # gitlab_rails['smtp_enable_starttls_auto'] = true
    # gitlab_rails['smtp_tls'] = false
    # gitlab_rails['smtp_pool'] = false

    ###! **Can be: 'none', 'peer', 'client_once', 'fail_if_no_peer_cert'**
    ###! Docs: http://api.rubyonrails.org/classes/ActionMailer/Base.html
    # gitlab_rails['smtp_openssl_verify_mode'] = 'none'

    # gitlab_rails['smtp_ca_path'] = "/etc/ssl/certs"
    # gitlab_rails['smtp_ca_file'] = "/etc/ssl/certs/ca-certificates.crt"

    ### Email Settings

    gitlab_rails['gitlab_email_enabled'] = false

    ##! If your SMTP server does not like the default 'From: gitlab@gitlab.example.com'
    ##! can change the 'From' with this setting.
    # gitlab_rails['gitlab_email_from'] = 'example@example.com'
    # gitlab_rails['gitlab_email_display_name'] = 'Example'
    # gitlab_rails['gitlab_email_reply_to'] = 'noreply@example.com'
    # gitlab_rails['gitlab_email_subject_suffix'] = ''
    # gitlab_rails['gitlab_email_smime_enabled'] = false
    # gitlab_rails['gitlab_email_smime_key_file'] = '/etc/gitlab/ssl/gitlab_smime.key'
    # gitlab_rails['gitlab_email_smime_cert_file'] = '/etc/gitlab/ssl/gitlab_smime.crt'
    # gitlab_rails['gitlab_email_smime_ca_certs_file'] = '/etc/gitlab/ssl/gitlab_smime_cas.crt'

    ### GitLab user privileges
    # gitlab_rails['gitlab_default_can_create_group'] = true
    # gitlab_rails['gitlab_username_changing_enabled'] = true

    ### Default Theme
    ### Available values:
    ##! `1`  for Indigo
    ##! `2`  for Dark
    ##! `3`  for Light
    ##! `4`  for Blue
    ##! `5`  for Green
    ##! `6`  for Light Indigo
    ##! `7`  for Light Blue
    ##! `8`  for Light Green
    ##! `9`  for Red
    ##! `10` for Light Red
    gitlab_rails['gitlab_default_theme'] = 8

    ### Default project feature settings
    # gitlab_rails['gitlab_default_projects_features_issues'] = true
    # gitlab_rails['gitlab_default_projects_features_merge_requests'] = true
    # gitlab_rails['gitlab_default_projects_features_wiki'] = true
    # gitlab_rails['gitlab_default_projects_features_snippets'] = true
    # gitlab_rails['gitlab_default_projects_features_builds'] = true
    # gitlab_rails['gitlab_default_projects_features_container_registry'] = true

    ### Automatic issue closing
    ###! See https://docs.gitlab.com/ee/customization/issue_closing.html for more
    ###! information about this pattern.
    # gitlab_rails['gitlab_issue_closing_pattern'] = "\b((?:[Cc]los(?:e[sd]?|ing)|\b[Ff]ix(?:e[sd]|ing)?|\b[Rr]esolv(?:e[sd]?|ing)|\b[Ii]mplement(?:s|ed|ing)?)(:?) +(?:(?:issues? +)?%{issue_ref}(?:(?:, *| +and +)?)|([A-Z][A-Z0-9_]+-\d+))+)"

    ### Download location
    ###! When a user clicks e.g. 'Download zip' on a project, a temporary zip file
    ###! is created in the following directory.
    ###! Should not be the same path, or a sub directory of any of the `git_data_dirs`
    # gitlab_rails['gitlab_repository_downloads_path'] = 'tmp/repositories'

    ### Gravatar Settings
    # gitlab_rails['gravatar_plain_url'] = 'http://www.gravatar.com/avatar/%{hash}?s=%{size}&d=identicon'
    # gitlab_rails['gravatar_ssl_url'] = 'https://secure.gravatar.com/avatar/%{hash}?s=%{size}&d=identicon'

    ### Auxiliary jobs
    ###! Periodically executed jobs, to self-heal Gitlab, do external
    ###! synchronizations, etc.
    ###! Docs: https://github.com/ondrejbartas/sidekiq-cron#adding-cron-job
    ###!       https://docs.gitlab.com/ee/ci/yaml/README.html#artifactsexpire_in
    # gitlab_rails['stuck_ci_jobs_worker_cron'] = "0 0 * * *"
    # gitlab_rails['expire_build_artifacts_worker_cron'] = "*/7 * * * *"
    # gitlab_rails['environments_auto_stop_cron_worker_cron'] = "24 * * * *"
    # gitlab_rails['pipeline_schedule_worker_cron'] = "19 * * * *"
    # gitlab_rails['ci_archive_traces_cron_worker_cron'] = "17 * * * *"
    # gitlab_rails['repository_check_worker_cron'] = "20 * * * *"
    # gitlab_rails['admin_email_worker_cron'] = "0 0 * * 0"
    # gitlab_rails['personal_access_tokens_expiring_worker_cron'] = "0 1 * * *"
    # gitlab_rails['personal_access_tokens_expired_notification_worker_cron'] = "0 2 * * *"
    # gitlab_rails['repository_archive_cache_worker_cron'] = "0 * * * *"
    # gitlab_rails['pages_domain_verification_cron_worker'] = "*/15 * * * *"
    # gitlab_rails['pages_domain_ssl_renewal_cron_worker'] = "*/10 * * * *"
    # gitlab_rails['pages_domain_removal_cron_worker'] = "47 0 * * *"
    # gitlab_rails['remove_unaccepted_member_invites_cron_worker'] = "10 15 * * *"
    # gitlab_rails['schedule_migrate_external_diffs_worker_cron'] = "15 * * * *"
    # gitlab_rails['ci_platform_metrics_update_cron_worker'] = '47 9 * * *'
    # gitlab_rails['analytics_usage_trends_count_job_trigger_worker_cron'] = "50 23 */1 * *"
    # gitlab_rails['member_invitation_reminder_emails_worker_cron'] = "0 0 * * *"
    # gitlab_rails['user_status_cleanup_batch_worker_cron'] = "* * * * *"
    # gitlab_rails['namespaces_in_product_marketing_emails_worker_cron'] = "0 9 * * *"

    ### Webhook Settings
    ###! Number of seconds to wait for HTTP response after sending webhook HTTP POST
    ###! request (default: 10)
    # gitlab_rails['webhook_timeout'] = 10

    ### GraphQL Settings
    ###! Tells the rails application how long it has to complete a GraphQL request.
    ###! We suggest this value to be higher than the database timeout value
    ###! and lower than the worker timeout set in unicorn/puma. (default: 30)
    # gitlab_rails['graphql_timeout'] = 30

    ### Trusted proxies
    ###! Customize if you have GitLab behind a reverse proxy which is running on a
    ###! different machine.
    ###! **Add the IP address for your reverse proxy to the list, otherwise users
    ###!   will appear signed in from that address.**
    # gitlab_rails['trusted_proxies'] = []

    ### Content Security Policy
    ####! Customize if you want to enable the Content-Security-Policy header, which
    ####! can help thwart JavaScript cross-site scripting (XSS) attacks.
    ####! See: https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
    # gitlab_rails['content_security_policy'] = {
    #  'enabled' => false,
    #  'report_only' => false,
    #  # Each directive is a String (e.g. "'self'").
    #  'directives' => {
    #    'base_uri' => nil,
    #    'child_src' => nil,
    #    'connect_src' => nil,
    #    'default_src' => nil,
    #    'font_src' => nil,
    #    'form_action' => nil,
    #    'frame_ancestors' => nil,
    #    'frame_src' => nil,
    #    'img_src' => nil,
    #    'manifest_src' => nil,
    #    'media_src' => nil,
    #    'object_src' => nil,
    #    'script_src' => nil,
    #    'style_src' => nil,
    #    'worker_src' => nil,
    #    'report_uri' => nil,
    #  }
    # }

    ### Allowed hosts
    ###! Customize the `host` headers that should be catered by the Rails
    ###! application. By default, everything is allowed.
    # gitlab_rails['allowed_hosts'] = []

    ### Monitoring settings
    ###! IP whitelist controlling access to monitoring endpoints
    gitlab_rails['monitoring_whitelist'] = ['127.0.0.0/8', '10.0.0.0/8', '::1/128']
    ###! Time between sampling of unicorn socket metrics, in seconds
    # gitlab_rails['monitoring_unicorn_sampler_interval'] = 10

    ### Shutdown settings
    ###! Defines an interval to block healthcheck,
    ###! but continue accepting application requests.
    # gitlab_rails['shutdown_blackout_seconds'] = 10

    ### Reply by email
    ###! Allow users to comment on issues and merge requests by replying to
    ###! notification emails.
    ###! Docs: https://docs.gitlab.com/ee/administration/reply_by_email.html
    # gitlab_rails['incoming_email_enabled'] = true

    #### Incoming Email Address
    ####! The email address including the `%{key}` placeholder that will be replaced
    ####! to reference the item being replied to.
    ####! **The placeholder can be omitted but if present, it must appear in the
    ####!   "user" part of the address (before the `@`).**
    # gitlab_rails['incoming_email_address'] = "gitlab-incoming+%{key}@gmail.com"

    #### Email account username
    ####! **With third party providers, this is usually the full email address.**
    ####! **With self-hosted email servers, this is usually the user part of the
    ####!   email address.**
    # gitlab_rails['incoming_email_email'] = "gitlab-incoming@gmail.com"

    #### Email account password
    # gitlab_rails['incoming_email_password'] = "[REDACTED]"

    #### IMAP Settings
    # gitlab_rails['incoming_email_host'] = "imap.gmail.com"
    # gitlab_rails['incoming_email_port'] = 993
    # gitlab_rails['incoming_email_ssl'] = true
    # gitlab_rails['incoming_email_start_tls'] = false

    #### Incoming Mailbox Settings (via `mail_room`)
    ####! The mailbox where incoming mail will end up. Usually "inbox".
    # gitlab_rails['incoming_email_mailbox_name'] = "inbox"
    ####! The IDLE command timeout.
    # gitlab_rails['incoming_email_idle_timeout'] = 60
    ####! The file name for internal `mail_room` JSON logfile
    # gitlab_rails['incoming_email_log_file'] = "/var/log/gitlab/mailroom/mail_room_json.log"
    ####! Permanently remove messages from the mailbox when they are deleted after delivery
    # gitlab_rails['incoming_email_expunge_deleted'] = false

    #### Inbox options (for Microsoft Graph)
    # gitlab_rails['incoming_email_inbox_method'] = 'microsoft_graph'
    # gitlab_rails['incoming_email_inbox_options'] {
    #    'tenant_id': 'YOUR-TENANT-ID',
    #    'client_id': 'YOUR-CLIENT-ID',
    #    'client_secret': 'YOUR-CLIENT-SECRET',
    #    'poll_interval': 60  # Optional
    # }

    ####! The format of mail_room crash logs
    # mailroom['exit_log_format'] = "plain"

    ### Consolidated (simplified) object storage configuration
    ###! This uses a single credential for object storage with multiple buckets.
    ###! It also enables Workhorse to upload files directly with its own S3 client
    ###! instead of using pre-signed URLs.
    ###!
    ###! This configuration will only take effect if the object_store
    ###! sections are not defined within the types. For example, enabling
    ###! gitlab_rails['artifacts_object_store_enabled'] or
    ###! gitlab_rails['lfs_object_store_enabled'] will prevent the
    ###! consolidated settings from being used.
    ###!
    ###! Be sure to use different buckets for each type of object.
    ###! Docs: https://docs.gitlab.com/ee/administration/object_storage.html
    gitlab_rails['object_store']['enabled'] = true
    gitlab_rails['object_store']['direct_upload'] = true
    gitlab_rails['object_store']['proxy_download'] = true
    gitlab_rails['object_store']['connection'] = {
      'provider' => 'AWS',
      'region' => 'eu-west-1',
      'aws_access_key_id' => 'minio-codeua-gitlab-key',
      'aws_secret_access_key' => 'girs_code-ua2021',
      'aws_signature_version' => 4,
      'host' => 'http://minio-sidekick.code-ua:9000',
      'endpoint' => 'http://minio-sidekick.code-ua:9000',
      'path_style' => true
    }

    gitlab_rails['object_store']['objects']['artifacts']['bucket'] = 'artifacts'
    gitlab_rails['object_store']['objects']['external_diffs']['bucket'] = 'external-diffs'
    gitlab_rails['object_store']['objects']['lfs']['bucket'] = 'lfs-objects'
    gitlab_rails['object_store']['objects']['uploads']['bucket'] = 'uploads'
    gitlab_rails['object_store']['objects']['packages']['bucket'] = 'packages'
    gitlab_rails['object_store']['objects']['dependency_proxy']['bucket'] = 'dependency-proxy'
    gitlab_rails['object_store']['objects']['terraform_state']['bucket'] = 'terraform-state'
    gitlab_rails['object_store']['objects']['pages']['bucket'] = 'pages'

    # ### Job Artifacts
    # gitlab_rails['artifacts_enabled'] = true
    # # gitlab_rails['artifacts_path'] = "/var/opt/gitlab/gitlab-rails/shared/artifacts"
    # ####! Job artifacts Object Store
    # ####! Docs: https://docs.gitlab.com/ee/administration/job_artifacts.html#using-object-storage
    # gitlab_rails['artifacts_object_store_enabled'] = true
    # gitlab_rails['artifacts_object_store_direct_upload'] = false
    # gitlab_rails['artifacts_object_store_background_upload'] = true
    # gitlab_rails['artifacts_object_store_proxy_download'] = true
    # gitlab_rails['artifacts_object_store_remote_directory'] = "artifacts"
    # gitlab_rails['artifacts_object_store_connection'] = {
    #   'provider' => 'AWS',
    #   'region' => 'eu-west-1',
    #   'aws_access_key_id' => 'minio-codeua-gitlab-key',
    #   'aws_secret_access_key' => 'girs_code-ua2021',
    #   'aws_signature_version' => 4,
    #   'host' => 'http://minio-sidekick.code-ua:9000',
    #   'endpoint' => 'http://minio-sidekick.code-ua:9000',
    #   'path_style' => true
    # }

    # ## External merge request diffs
    # gitlab_rails['external_diffs_enabled'] = false
    # gitlab_rails['external_diffs_when'] = nil
    # # gitlab_rails['external_diffs_storage_path'] = "/var/opt/gitlab/gitlab-rails/shared/external-diffs"
    # gitlab_rails['external_diffs_object_store_enabled'] = true
    # gitlab_rails['external_diffs_object_store_direct_upload'] = false
    # gitlab_rails['external_diffs_object_store_background_upload'] = false
    # gitlab_rails['external_diffs_object_store_proxy_download'] = true
    # gitlab_rails['external_diffs_object_store_remote_directory'] = "external-diffs"
    # gitlab_rails['external_diffs_object_store_connection'] = {
    #   'provider' => 'AWS',
    #   'region' => 'eu-west-1',
    #   'aws_access_key_id' => 'minio-codeua-gitlab-key',
    #   'aws_secret_access_key' => 'girs_code-ua2021',
    #   'aws_signature_version' => 4,
    #   'host' => 'http://minio-sidekick.code-ua:9000',
    #   'endpoint' => 'http://minio-sidekick.code-ua:9000',
    #   'path_style' => true
    # }

    # ## Git LFS
    # gitlab_rails['lfs_enabled'] = true
    # # gitlab_rails['lfs_storage_path'] = "/var/opt/gitlab/gitlab-rails/shared/lfs-objects"
    # gitlab_rails['lfs_object_store_enabled'] = true
    # gitlab_rails['lfs_object_store_direct_upload'] = false
    # gitlab_rails['lfs_object_store_background_upload'] = true
    # gitlab_rails['lfs_object_store_proxy_download'] = false
    # gitlab_rails['lfs_object_store_remote_directory'] = "lfs-objects"
    # gitlab_rails['lfs_object_store_connection'] = {
    #   'provider' => 'AWS',
    #   'region' => 'eu-west-1',
    #   'aws_access_key_id' => 'AWS_ACCESS_KEY_ID',
    #   'aws_secret_access_key' => 'AWS_SECRET_ACCESS_KEY',
    #   # # The below options configure an S3 compatible host instead of AWS
    #   # 'aws_signature_version' => 4, # For creation of signed URLs. Set to 2 if provider does not support v4.
    #   # 'endpoint' => 'https://s3.amazonaws.com', # default: nil - Useful for S3 compliant services such as DigitalOcean Spaces
    #   # 'host' => 's3.amazonaws.com',
    #   # 'path_style' => false # Use 'host/bucket_name/object' instead of 'bucket_name.host/object'
    # }

    # ### GitLab uploads
    # ###! Docs: https://docs.gitlab.com/ee/administration/uploads.html
    # # gitlab_rails['uploads_directory'] = "/var/opt/gitlab/gitlab-rails/uploads"
    # # gitlab_rails['uploads_storage_path'] = "/opt/gitlab/embedded/service/gitlab-rails/public"
    # gitlab_rails['uploads_base_dir'] = "uploads/-/system"
    # gitlab_rails['uploads_object_store_enabled'] = true
    # gitlab_rails['uploads_object_store_direct_upload'] = false
    # gitlab_rails['uploads_object_store_background_upload'] = true
    # gitlab_rails['uploads_object_store_proxy_download'] = true
    # gitlab_rails['uploads_object_store_remote_directory'] = "uploads"
    # gitlab_rails['uploads_object_store_connection'] = {
    #   'provider' => 'AWS',
    #   'region' => 'eu-west-1',
    #   'aws_access_key_id' => 'minio-codeua-gitlab-key',
    #   'aws_secret_access_key' => 'girs_code-ua2021',
    #   'aws_signature_version' => 4,
    #   'host' => 'http://minio-sidekick.code-ua:9000',
    #   'endpoint' => 'http://minio-sidekick.code-ua:9000',
    #   'path_style' => true
    # }

    ### Terraform state
    ###! Docs: https://docs.gitlab.com/ee/administration/terraform_state
    # gitlab_rails['terraform_state_enabled'] = true
    # gitlab_rails['terraform_state_storage_path'] = "/var/opt/gitlab/gitlab-rails/shared/terraform_state"
    # gitlab_rails['terraform_state_object_store_enabled'] = false
    # gitlab_rails['terraform_state_object_store_remote_directory'] = "terraform"
    # gitlab_rails['terraform_state_object_store_connection'] = {
    #   'provider' => 'AWS',
    #   'region' => 'eu-west-1',
    #   'aws_access_key_id' => 'AWS_ACCESS_KEY_ID',
    #   'aws_secret_access_key' => 'AWS_SECRET_ACCESS_KEY',
    #   # # The below options configure an S3 compatible host instead of AWS
    #   # 'host' => 's3.amazonaws.com',
    #   # 'aws_signature_version' => 4, # For creation of signed URLs. Set to 2 if provider does not support v4.
    #   # 'endpoint' => 'https://s3.amazonaws.com', # default: nil - Useful for S3 compliant services such as DigitalOcean Spaces
    #   # 'path_style' => false # Use 'host/bucket_name/object' instead of 'bucket_name.host/object'
    # }

    ### GitLab Pages
    # gitlab_rails['pages_object_store_enabled'] = false
    # gitlab_rails['pages_object_store_remote_directory'] = "pages"
    # gitlab_rails['pages_object_store_connection'] = {
    #   'provider' => 'AWS',
    #   'region' => 'eu-west-1',
    #   'aws_access_key_id' => 'AWS_ACCESS_KEY_ID',
    #   'aws_secret_access_key' => 'AWS_SECRET_ACCESS_KEY',
    #   # # The below options configure an S3 compatible host instead of AWS
    #   # 'host' => 's3.amazonaws.com',
    #   # 'aws_signature_version' => 4, # For creation of signed URLs. Set to 2 if provider does not support v4.
    #   # 'endpoint' => 'https://s3.amazonaws.com', # default: nil - Useful for S3 compliant services such as DigitalOcean Spaces
    #   # 'path_style' => false # Use 'host/bucket_name/object' instead of 'bucket_name.host/object'
    # }
    # gitlab_rails['pages_local_store_enabled'] = true
    # gitlab_rails['pages_local_store_path'] = "/var/opt/gitlab/gitlab-rails/shared/pages"

    ### Impersonation settings
    # gitlab_rails['impersonation_enabled'] = true

    ### Application settings cache expiry in seconds. (default: 60)
    # gitlab_rails['application_settings_cache_seconds'] = 60

    ### Usage Statistics
    # gitlab_rails['usage_ping_enabled'] = true

    ### Seat Link setting
    ###! Docs: https://docs.gitlab.com/ee/subscriptions/index.html#seat-link
    # gitlab_rails['seat_link_enabled'] = true

    ### GitLab Mattermost
    ###! These settings are void if Mattermost is installed on the same omnibus
    ###! install
    # gitlab_rails['mattermost_host'] = "https://mattermost.example.com"

    ### LDAP Settings
    ###! Docs: https://docs.gitlab.com/omnibus/settings/ldap.html
    ###! **Be careful not to break the indentation in the ldap_servers block. It is
    ###!   in yaml format and the spaces must be retained. Using tabs will not work.**

    # gitlab_rails['ldap_enabled'] = false
    # gitlab_rails['prevent_ldap_sign_in'] = false

    ###! **remember to close this block with 'EOS' below**
    # gitlab_rails['ldap_servers'] = YAML.load <<-'EOS'
    #   main: # 'main' is the GitLab 'provider ID' of this LDAP server
    #     label: 'LDAP'
    #     host: '_your_ldap_server'
    #     port: 389
    #     uid: 'sAMAccountName'
    #     bind_dn: '_the_full_dn_of_the_user_you_will_bind_with'
    #     password: '_the_password_of_the_bind_user'
    #     encryption: 'plain' # "start_tls" or "simple_tls" or "plain"
    #     verify_certificates: true
    #     smartcard_auth: false
    #     active_directory: true
    #     allow_username_or_email_login: false
    #     lowercase_usernames: false
    #     block_auto_created_users: false
    #     base: ''
    #     user_filter: ''
    #     ## EE only
    #     group_base: ''
    #     admin_group: ''
    #     sync_ssh_keys: false
    #
    #   secondary: # 'secondary' is the GitLab 'provider ID' of second LDAP server
    #     label: 'LDAP'
    #     host: '_your_ldap_server'
    #     port: 389
    #     uid: 'sAMAccountName'
    #     bind_dn: '_the_full_dn_of_the_user_you_will_bind_with'
    #     password: '_the_password_of_the_bind_user'
    #     encryption: 'plain' # "start_tls" or "simple_tls" or "plain"
    #     verify_certificates: true
    #     smartcard_auth: false
    #     active_directory: true
    #     allow_username_or_email_login: false
    #     lowercase_usernames: false
    #     block_auto_created_users: false
    #     base: ''
    #     user_filter: ''
    #     ## EE only
    #     group_base: ''
    #     admin_group: ''
    #     sync_ssh_keys: false
    # EOS

    ### Smartcard authentication settings
    ###! Docs: https://docs.gitlab.com/ee/administration/auth/smartcard.html
    # gitlab_rails['smartcard_enabled'] = false
    # gitlab_rails['smartcard_ca_file'] = "/etc/gitlab/ssl/CA.pem"
    # gitlab_rails['smartcard_client_certificate_required_host'] = 'smartcard.gitlab.example.com'
    # gitlab_rails['smartcard_client_certificate_required_port'] = 3444
    # gitlab_rails['smartcard_required_for_git_access'] = false
    # gitlab_rails['smartcard_san_extensions'] = false

    ### OmniAuth Settings
    ###! Docs: https://docs.gitlab.com/ee/integration/omniauth.html
    # gitlab_rails['omniauth_enabled'] = nil
    # gitlab_rails['omniauth_allow_single_sign_on'] = ['saml']
    # gitlab_rails['omniauth_sync_email_from_provider'] = 'saml'
    # gitlab_rails['omniauth_sync_profile_from_provider'] = ['saml']
    # gitlab_rails['omniauth_sync_profile_attributes'] = ['email']
    # gitlab_rails['omniauth_auto_sign_in_with_provider'] = 'saml'
    # gitlab_rails['omniauth_block_auto_created_users'] = true
    # gitlab_rails['omniauth_auto_link_ldap_user'] = false
    # gitlab_rails['omniauth_auto_link_saml_user'] = false
    # gitlab_rails['omniauth_auto_link_user'] = ['saml']
    # gitlab_rails['omniauth_external_providers'] = ['twitter', 'google_oauth2']
    # gitlab_rails['omniauth_allow_bypass_two_factor'] = ['google_oauth2']
    # gitlab_rails['omniauth_providers'] = [
    #   {
    #     "name" => "google_oauth2",
    #     "app_id" => "YOUR APP ID",
    #     "app_secret" => "YOUR APP SECRET",
    #     "args" => { "access_type" => "offline", "approval_prompt" => "" }
    #   }
    # ]

    ### FortiAuthenticator authentication settings
    # gitlab_rails['forti_authenticator_enabled'] = false
    # gitlab_rails['forti_authenticator_host'] = 'forti_authenticator.example.com'
    # gitlab_rails['forti_authenticator_port'] = 443
    # gitlab_rails['forti_authenticator_username'] = 'admin'
    # gitlab_rails['forti_authenticator_access_token'] = 's3cr3t'

    ### FortiToken Cloud authentication settings
    # gitlab_rails['forti_token_cloud_enabled'] = false
    # gitlab_rails['forti_token_cloud_client_id'] = 'forti_token_cloud_client_id'
    # gitlab_rails['forti_token_cloud_client_secret'] = 's3cr3t'

    ### Backup Settings
    ###! Docs: https://docs.gitlab.com/omnibus/settings/backups.html

    # gitlab_rails['manage_backup_path'] = true
    # gitlab_rails['backup_path'] = "/var/opt/gitlab/backups"

    ###! Docs: https://docs.gitlab.com/ee/raketasks/backup_restore.html#backup-archive-permissions
    # gitlab_rails['backup_archive_permissions'] = 0644

    # gitlab_rails['backup_pg_schema'] = 'public'

    ###! The duration in seconds to keep backups before they are allowed to be deleted
    # gitlab_rails['backup_keep_time'] = 604800

    # gitlab_rails['backup_upload_connection'] = {
    #   'provider' => 'AWS',
    #   'region' => 'eu-west-1',
    #   'aws_access_key_id' => 'AKIAKIAKI',
    #   'aws_secret_access_key' => 'secret123',
    #   # # If IAM profile use is enabled, remove aws_access_key_id and aws_secret_access_key
    #   'use_iam_profile' => false
    # }
    # gitlab_rails['backup_upload_remote_directory'] = 'my.s3.bucket'
    # gitlab_rails['backup_multipart_chunk_size'] = 104857600

    ###! **Turns on AWS Server-Side Encryption with Amazon S3-Managed Keys for
    ###!   backups**
    # gitlab_rails['backup_encryption'] = 'AES256'
    ###! The encryption key to use with AWS Server-Side Encryption.
    ###! Setting this value will enable Server-Side Encryption with customer provided keys;
    ###!   otherwise S3-managed keys are used.
    # gitlab_rails['backup_encryption_key'] = '<base64-encoded encryption key>'

    ###! **Specifies Amazon S3 storage class to use for backups. Valid values
    ###!   include 'STANDARD', 'STANDARD_IA', and 'REDUCED_REDUNDANCY'**
    # gitlab_rails['backup_storage_class'] = 'STANDARD'

    ###! Skip parts of the backup. Comma separated.
    ###! Docs: https://docs.gitlab.com/ee/raketasks/backup_restore.html#excluding-specific-directories-from-the-backup
    #gitlab_rails['env'] = {
    #    "SKIP" => "db,uploads,repositories,builds,artifacts,lfs,registry,pages"
    #}

    ### Pseudonymizer Settings
    # gitlab_rails['pseudonymizer_manifest'] = 'config/pseudonymizer.yml'
    # gitlab_rails['pseudonymizer_upload_remote_directory'] = 'gitlab-elt'
    # gitlab_rails['pseudonymizer_upload_connection'] = {
    #   'provider' => 'AWS',
    #   'region' => 'eu-west-1',
    #   'aws_access_key_id' => 'AKIAKIAKI',
    #   'aws_secret_access_key' => 'secret123'
    # }


    ### For setting up different data storing directory
    ###! Docs: https://docs.gitlab.com/omnibus/settings/configuration.html#storing-git-data-in-an-alternative-directory
    ###! **If you want to use a single non-default directory to store git data use a
    ###!   path that doesn't contain symlinks.**
    git_data_dirs({
      "default" => {
        "gitaly_address" => "tcp://praefect-0.praefect.code-ua:2305",
        "gitaly_token" => 'PRAEFECT_EXTERNAL_TOKEN'
      }
    })

    ### Gitaly settings
    # gitlab_rails['gitaly_token'] = 'secret token'

    ### For storing GitLab application uploads, eg. LFS objects, build artifacts
    ###! Docs: https://docs.gitlab.com/ee/development/shared_files.html
    # gitlab_rails['shared_path'] = '/var/opt/gitlab/gitlab-rails/shared'

    ### For storing encrypted configuration files
    ###! Docs: https://docs.gitlab.com/ee/administration/encrypted_configuration.html
    # gitlab_rails['encrypted_settings_path'] = '/var/opt/gitlab/gitlab-rails/shared/encrypted_settings'

    ### Wait for file system to be mounted
    ###! Docs: https://docs.gitlab.com/omnibus/settings/configuration.html#only-start-omnibus-gitlab-services-after-a-given-filesystem-is-mounted
    # high_availability['mountpoint'] = ["/var/opt/gitlab/git-data", "/var/opt/gitlab/gitlab-rails/shared"]

    ### GitLab Shell settings for GitLab
    # gitlab_rails['gitlab_shell_ssh_port'] = 22
    # gitlab_rails['gitlab_shell_git_timeout'] = 800

    ### Extra customization
    # gitlab_rails['extra_google_analytics_id'] = '_your_tracking_id'
    # gitlab_rails['extra_google_tag_manager_id'] = '_your_tracking_id'
    # gitlab_rails['extra_matomo_url'] = '_your_matomo_url'
    # gitlab_rails['extra_matomo_site_id'] = '_your_matomo_site_id'
    # gitlab_rails['extra_matomo_disable_cookies'] = false

    ##! Docs: https://docs.gitlab.com/omnibus/settings/environment-variables.html
    # gitlab_rails['env'] = {
    #   'BUNDLE_GEMFILE' => "/opt/gitlab/embedded/service/gitlab-rails/Gemfile",
    #   'PATH' => "/opt/gitlab/bin:/opt/gitlab/embedded/bin:/bin:/usr/bin"
    # }

    # gitlab_rails['rack_attack_git_basic_auth'] = {
    #   'enabled' => false,
    #   'ip_whitelist' => ["127.0.0.1"],
    #   'maxretry' => 10,
    #   'findtime' => 60,
    #   'bantime' => 3600
    # }

    ###! **We do not recommend changing these directories.**
    # gitlab_rails['dir'] = "/var/opt/gitlab/gitlab-rails"
    # gitlab_rails['log_directory'] = "/var/log/gitlab/gitlab-rails"

    #### Change the initial default admin password and shared runner registration tokens.
    ####! **Only applicable on initial setup, changing these settings after database
    ####!   is created and seeded won't yield any change.**
    # gitlab_rails['initial_root_password'] = "password"
    # gitlab_rails['initial_shared_runners_registration_token'] = ""

    #### Set path to an initial license to be used while bootstrapping GitLab.
    ####! **Only applicable on initial setup, future license updations need to be done via UI.
    ####! Updating the file specified in this path won't yield any change after the first reconfigure run.
    # gitlab_rails['initial_license_file'] = '/etc/gitlab/company.gitlab-license'

    #### Enable or disable automatic database migrations
    # gitlab_rails['auto_migrate'] = true

    #### This is advanced feature used by large gitlab deployments where loading
    #### whole RAILS env takes a lot of time.
    # gitlab_rails['rake_cache_clear'] = true

    ### GitLab database settings
    ###! Docs: https://docs.gitlab.com/omnibus/settings/database.html
    ###! **Only needed if you use an external database.**
    gitlab_rails['db_adapter'] = "postgresql"
    # gitlab_rails['db_encoding'] = "unicode"
    # gitlab_rails['db_collation'] = nil
    gitlab_rails['db_database'] = "codeua_production"
    gitlab_rails['db_username'] = "postgres"
    gitlab_rails['db_password'] = "meercat"
    gitlab_rails['db_host'] = "pgpool.code-ua"
    gitlab_rails['db_port'] = 5432
    # gitlab_rails['db_socket'] = nil
    gitlab_rails['db_sslmode'] = 'disable'
    # gitlab_rails['db_sslcompression'] = 0
    # gitlab_rails['db_sslrootcert'] = nil
    # gitlab_rails['db_sslcert'] = nil
    # gitlab_rails['db_sslkey'] = nil
    # gitlab_rails['db_prepared_statements'] = false
    # gitlab_rails['db_statements_limit'] = 1000
    # gitlab_rails['db_connect_timeout'] = nil
    # gitlab_rails['db_keepalives'] = nil
    # gitlab_rails['db_keepalives_idle'] = nil
    # gitlab_rails['db_keepalives_interval'] = nil
    # gitlab_rails['db_keepalives_count'] = nil
    # gitlab_rails['db_tcp_user_timeout'] = nil
    # gitlab_rails['db_application_name'] = nil


    ### GitLab Redis settings
    ###! Connect to your own Redis instance
    ###! Docs: https://docs.gitlab.com/omnibus/settings/redis.html

    #### Redis TCP connection
    # gitlab_rails['redis_host'] = "redis.code-ua"
    gitlab_rails['redis_port'] = 6379
    # gitlab_rails['redis_ssl'] = false
    gitlab_rails['redis_password'] = "redis-meercat"
    # gitlab_rails['redis_database'] = 0
    # gitlab_rails['redis_enable_client'] = true

    #### Redis local UNIX socket (will be disabled if TCP method is used)
    # gitlab_rails['redis_socket'] = "/var/opt/gitlab/redis/redis.socket"

    #### Sentinel support
    ####! To have Sentinel working, you must enable Redis TCP connection support
    ####! above and define a few Sentinel hosts below (to get a reliable setup
    ####! at least 3 hosts).
    ####! **You don't need to list every sentinel host, but the ones not listed will
    ####!   not be used in a fail-over situation to query for the new master.**
    # gitlab_rails['redis_sentinels'] = [
    #   {'host' => '127.0.0.1', 'port' => 26379},
    # ]

    ## Must be the same in every sentinel node
    redis['master_name'] = 'gitlab-redis'

    ## The same password for Redis authentication you set up for the master node.
    redis['master_password'] = 'redis-meercat'

    #### Separate instances support
    ###! Docs: https://docs.gitlab.com/omnibus/settings/redis.html#running-with-multiple-redis-instances
    gitlab_rails['redis_cache_instance'] = "redis://:redis-meercat@redis-cache-0.redis-cache.code-ua"
    gitlab_rails['redis_cache_sentinels'] = []

    gitlab_rails['redis_queues_instance'] = "redis://:redis-meercat@redis-queues-0.redis-queues.code-ua"
    gitlab_rails['redis_queues_sentinels'] = []

    gitlab_rails['redis_shared_state_instance'] = "redis://:redis-meercat@redis-state-0.redis-state.code-ua"
    gitlab_rails['redis_shared_sentinels'] = []

    gitlab_rails['redis_actioncable_instance'] = "redis://:redis-meercat@redis-actioncable-0.redis-actioncable.code-ua"
    gitlab_rails['redis_actioncable_sentinels'] = []

    ################################################################################
    ## Container Registry settings
    ##! Docs: https://docs.gitlab.com/ee/administration/container_registry.html
    ################################################################################

    #registry_external_url 'https://registry.code-ua.k3s'

    ### Settings used by GitLab application
    #gitlab_rails['registry_enabled'] = false
    #gitlab_rails['registry_host'] = "registry.code-ua"
    #gitlab_rails['registry_port'] = "5000"
    # gitlab_rails['registry_path'] = "/var/opt/gitlab/gitlab-rails/shared/registry"

    # Notification secret, it's used to authenticate notification requests to GitLab application
    # You only need to change this when you use external Registry service, otherwise
    # it will be taken directly from notification settings of your Registry
    # gitlab_rails['registry_notification_secret'] = nil

    ###! **Do not change the following 3 settings unless you know what you are
    ###!   doing**
    gitlab_rails['registry_api_url'] = "http://regitry.code-ua:5000"
    gitlab_rails['registry_key_path'] = "/var/opt/gitlab/gitlab-rails/certificate.key"
    # gitlab_rails['registry_issuer'] = "omnibus-gitlab-issuer"

    ### Settings used by Registry application
    registry['enable'] = false
    # registry['username'] = "registry"
    # registry['group'] = "registry"
    # registry['uid'] = nil
    # registry['gid'] = nil
    # registry['dir'] = "/var/opt/gitlab/registry"
    # registry['registry_http_addr'] = "localhost:5000"
    # registry['debug_addr'] = "localhost:5001"
    # registry['log_directory'] = "/var/log/gitlab/registry"
    # registry['env_directory'] = "/opt/gitlab/etc/registry/env"
    # registry['env'] = {
    #   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
    # }
    # registry['log_level'] = "info"
    # registry['log_formatter'] = "text"
    # registry['rootcertbundle'] = "/var/opt/gitlab/registry/certificate.crt"
    # registry['health_storagedriver_enabled'] = true
    # registry['storage_delete_enabled'] = true
    # registry['validation_enabled'] = false
    # registry['autoredirect'] = false
    # registry['compatibility_schema1_enabled'] = false

    ### Registry backend storage
    ###! Docs: https://docs.gitlab.com/ee/administration/packages/container_registry.html#configure-storage-for-the-container-registry
    # registry['storage'] = {
    #   's3' => {
    #     'accesskey' => 's3-access-key',
    #     'secretkey' => 's3-secret-key-for-access-key',
    #     'bucket' => 'your-s3-bucket',
    #     'region' => 'your-s3-region',
    #     'regionendpoint' => 'your-s3-regionendpoint'
    #   },
    #   'redirect' => {
    #     'disable' => false
    #   }
    # }

    ### Registry notifications endpoints
    # registry['notifications'] = [
    #   {
    #     'name' => 'test_endpoint',
    #     'url' => 'https://gitlab.example.com/notify2',
    #     'timeout' => '500ms',
    #     'threshold' => 5,
    #     'backoff' => '1s',
    #     'headers' => {
    #       "Authorization" => ["AUTHORIZATION_EXAMPLE_TOKEN"]
    #     }
    #   }
    # ]
    ### Default registry notifications
    # registry['default_notifications_timeout'] = "500ms"
    # registry['default_notifications_threshold'] = 5
    # registry['default_notifications_backoff'] = "1s"
    # registry['default_notifications_headers'] = {}

    ################################################################################
    ## Error Reporting and Logging with Sentry
    ################################################################################
    # gitlab_rails['sentry_enabled'] = false
    # gitlab_rails['sentry_dsn'] = 'https://<key>@sentry.io/<project>'
    # gitlab_rails['sentry_clientside_dsn'] = 'https://<key>@sentry.io/<project>'
    # gitlab_rails['sentry_environment'] = 'production'

    ################################################################################
    ## CI_JOB_JWT
    ################################################################################
    ##! RSA private key used to sign CI_JOB_JWT
    # gitlab_rails['ci_jwt_signing_key'] = nil # Will be generated if not set.

    ################################################################################
    ## GitLab Workhorse
    ##! Docs: https://gitlab.com/gitlab-org/gitlab-workhorse/blob/master/README.md
    ################################################################################

    # gitlab_workhorse['enable'] = true
    # gitlab_workhorse['ha'] = false
    # gitlab_workhorse['alt_document_root'] = nil
    # gitlab_workhorse['listen_network'] = "unix"
    # gitlab_workhorse['listen_umask'] = 000
    # gitlab_workhorse['listen_addr'] = "/var/opt/gitlab/gitlab-workhorse/sockets/socket"
    # gitlab_workhorse['auth_backend'] = "http://localhost:8080"

    ##! Enable Redis keywatcher, if this setting is not present it defaults to true
    # gitlab_workhorse['workhorse_keywatcher'] = true

    ##! the empty string is the default in gitlab-workhorse option parser
    # gitlab_workhorse['auth_socket'] = "''"

    ##! put an empty string on the command line
    # gitlab_workhorse['pprof_listen_addr'] = "''"

    gitlab_workhorse['prometheus_listen_addr'] = "0.0.0.0:9229"

    # gitlab_workhorse['dir'] = "/var/opt/gitlab/gitlab-workhorse"
    # gitlab_workhorse['log_directory'] = "/var/log/gitlab/gitlab-workhorse"
    # gitlab_workhorse['proxy_headers_timeout'] = "1m0s"

    ##! limit number of concurrent API requests, defaults to 0 which is unlimited
    # gitlab_workhorse['api_limit'] = 0

    ##! limit number of API requests allowed to be queued, defaults to 0 which
    ##! disables queuing
    # gitlab_workhorse['api_queue_limit'] = 0

    ##! duration after which we timeout requests if they sit too long in the queue
    # gitlab_workhorse['api_queue_duration'] = "30s"

    ##! Long polling duration for job requesting for runners
    # gitlab_workhorse['api_ci_long_polling_duration'] = "60s"

    ##! Propagate X-Request-Id if available. Workhorse will generate a random value otherwise.
    # gitlab_workhorse['propagate_correlation_id'] = false

    ##! Log format: default is json, can also be text or none.
    # gitlab_workhorse['log_format'] = "json"

    # gitlab_workhorse['env_directory'] = "/opt/gitlab/etc/gitlab-workhorse/env"
    # gitlab_workhorse['env'] = {
    #   'PATH' => "/opt/gitlab/bin:/opt/gitlab/embedded/bin:/bin:/usr/bin",
    #   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
    # }

    ##! Resource limitations for the dynamic image scaler.
    ##! Exceeding these thresholds will cause Workhorse to serve images in their original size.
    ##!
    ##! Maximum number of scaler processes that are allowed to execute concurrently.
    ##! It is recommended for this not to exceed the number of CPUs available.
    # gitlab_workhorse['image_scaler_max_procs'] = 4
    ##!
    ##! Maximum file size in bytes for an image to be considered eligible for rescaling
    # gitlab_workhorse['image_scaler_max_filesize'] = 250000

    ################################################################################
    ## GitLab User Settings
    ##! Modify default git user.
    ##! Docs: https://docs.gitlab.com/omnibus/settings/configuration.html#changing-the-name-of-the-git-user-group
    ################################################################################

    # user['username'] = "git"
    # user['group'] = "git"
    # user['uid'] = nil
    # user['gid'] = nil

    ##! The shell for the git user
    # user['shell'] = "/bin/sh"

    ##! The home directory for the git user
    # user['home'] = "/var/opt/gitlab"

    # user['git_user_name'] = "GitLab"
    # user['git_user_email'] = "gitlab@#{node['fqdn']}"

    ################################################################################
    ## GitLab Unicorn
    ##! Tweak unicorn settings.
    ##! Docs: https://docs.gitlab.com/omnibus/settings/unicorn.html
    ################################################################################

    # unicorn['enable'] = false
    # unicorn['worker_timeout'] = 60
    ###! Minimum worker_processes is 2 at this moment
    ###! See https://gitlab.com/gitlab-org/gitlab-foss/issues/18771
    # unicorn['worker_processes'] = 2

    ### Advanced settings
    # unicorn['listen'] = 'localhost'
    # unicorn['port'] = 8080
    # unicorn['socket'] = '/var/opt/gitlab/gitlab-rails/sockets/gitlab.socket'
    # unicorn['pidfile'] = '/opt/gitlab/var/unicorn/unicorn.pid'
    # unicorn['tcp_nopush'] = true
    # unicorn['backlog_socket'] = 1024

    ###! **Make sure somaxconn is equal or higher then backlog_socket**
    # unicorn['somaxconn'] = 1024

    ###! **We do not recommend changing this setting**
    # unicorn['log_directory'] = "/var/log/gitlab/unicorn"

    ### **Only change these settings if you understand well what they mean**
    ###! Docs: https://docs.gitlab.com/ee/administration/operations/unicorn.html#unicorn-worker-killer
    ###!       https://github.com/kzk/unicorn-worker-killer
    # unicorn['worker_memory_limit_min'] = "1024 * 1 << 20"
    # unicorn['worker_memory_limit_max'] = "1280 * 1 << 20"

    # unicorn['exporter_enabled'] = false
    # unicorn['exporter_address'] = "127.0.0.1"
    # unicorn['exporter_port'] = 8083

    ##! Tweak puma settings. You should only use Unicorn or Puma, not both.
    ##! Docs: https://docs.gitlab.com/omnibus/settings/puma.html
    ################################################################################

    # puma['enable'] = true
    # puma['ha'] = false
    # puma['worker_timeout'] = 60
    # puma['worker_processes'] = 2
    # puma['min_threads'] = 4
    # puma['max_threads'] = 4

    ### Advanced settings
    # puma['listen'] = '127.0.0.1'
    # puma['port'] = 8080
    # puma['socket'] = '/var/opt/gitlab/gitlab-rails/sockets/gitlab.socket'
    # puma['somaxconn'] = 1024

    # puma['pidfile'] = '/opt/gitlab/var/puma/puma.pid'
    # puma['state_path'] = '/opt/gitlab/var/puma/puma.state'

    ###! **We do not recommend changing this setting**
    # puma['log_directory'] = "/var/log/gitlab/puma"

    ### **Only change these settings if you understand well what they mean**
    ###! Docs: https://github.com/schneems/puma_worker_killer
    # puma['per_worker_max_memory_mb'] = 1024

    # puma['exporter_enabled'] = false
    # puma['exporter_address'] = "127.0.0.1"
    # puma['exporter_port'] = 8083

    ################################################################################
    ## GitLab Sidekiq
    ################################################################################

    ##! GitLab allows one to start multiple sidekiq processes. These
    ##! processes can be used to consume a dedicated set of queues. This
    ##! can be used to ensure certain queues are able to handle additional workload.
    ##! https://docs.gitlab.com/ee/administration/operations/extra_sidekiq_processes.html

    sidekiq['enable'] = false
    sidekiq['cluster'] = false
    # sidekiq['log_directory'] = "/var/log/gitlab/sidekiq"
    # sidekiq['log_format'] = "json"
    # sidekiq['shutdown_timeout'] = 4
    # sidekiq['cluster'] = true
    # sidekiq['queue_selector'] = false
    # sidekiq['interval'] = nil
    # sidekiq['max_concurrency'] = 50
    # sidekiq['min_concurrency'] = nil

    ##! Each entry in the queue_groups array denotes a group of queues that have to be processed by a
    ##! Sidekiq process. Multiple queues can be processed by the same process by
    ##! separating them with a comma within the group entry, a `*` will process all queues

    # sidekiq['queue_groups'] = ['*']

    ##! If negate is enabled then sidekiq-cluster will process all the queues that
    ##! don't match those in queue_groups.

    # sidekiq['negate'] = false

    # sidekiq['metrics_enabled'] = true
    # sidekiq['exporter_log_enabled'] = false
    # sidekiq['listen_address'] = "localhost"
    # sidekiq['listen_port'] = 8082

    ################################################################################
    ## gitlab-shell
    ################################################################################

    # gitlab_shell['audit_usernames'] = false
    # gitlab_shell['log_level'] = 'INFO'
    # gitlab_shell['log_format'] = 'json'
    # gitlab_shell['http_settings'] = { user: 'username', password: 'password', ca_file: '/etc/ssl/cert.pem', ca_path: '/etc/pki/tls/certs', self_signed_cert: false}
    # gitlab_shell['log_directory'] = "/var/log/gitlab/gitlab-shell/"
    # gitlab_shell['custom_hooks_dir'] = "/opt/gitlab/embedded/service/gitlab-shell/hooks"

    # gitlab_shell['auth_file'] = "/var/opt/gitlab/.ssh/authorized_keys"

    ### Migration to Go feature flags
    ###! Docs: https://gitlab.com/gitlab-org/gitlab-shell#migration-to-go-feature-flags
    # gitlab_shell['migration'] = { enabled: true, features: [] }

    ### Git trace log file.
    ###! If set, git commands receive GIT_TRACE* environment variables
    ###! Docs: https://git-scm.com/book/es/v2/Git-Internals-Environment-Variables#Debugging
    ###! An absolute path starting with / – the trace output will be appended to
    ###! that file. It needs to exist so we can check permissions and avoid
    ###! throwing warnings to the users.
    # gitlab_shell['git_trace_log_file'] = "/var/log/gitlab/gitlab-shell/gitlab-shell-git-trace.log"

    ##! **We do not recommend changing this directory.**
    # gitlab_shell['dir'] = "/var/opt/gitlab/gitlab-shell"

    ################################################################
    ## GitLab PostgreSQL
    ################################################################

    ###! Changing any of these settings requires a restart of postgresql.
    ###! By default, reconfigure reloads postgresql if it is running. If you
    ###! change any of these settings, be sure to run `gitlab-ctl restart postgresql`
    ###! after reconfigure in order for the changes to take effect.
    postgresql['enable'] = false
    # postgresql['listen_address'] = nil
    # postgresql['port'] = 5432

    ## Only used when Patroni is enabled. This is the port that PostgreSQL responds to other
    ## cluster members. This port is used by Patroni to advertize the PostgreSQL connection
    ## endpoint to the cluster. By default it is the same as postgresql['port'].
    # postgresql['connect_port'] = 5432

    # postgresql['data_dir'] = "/var/opt/gitlab/postgresql/data"

    ##! **recommend value is 1/4 of total RAM, up to 14GB.**
    # postgresql['shared_buffers'] = "256MB"

    ### Advanced settings
    # postgresql['ha'] = false
    # postgresql['dir'] = "/var/opt/gitlab/postgresql"
    # postgresql['log_directory'] = "/var/log/gitlab/postgresql"
    # postgresql['log_destination'] = nil
    # postgresql['logging_collector'] = nil
    # postgresql['log_truncate_on_rotation'] = nil
    # postgresql['log_rotation_age'] = nil
    # postgresql['log_rotation_size'] = nil
    # postgresql['username'] = "gitlab-psql"
    # postgresql['group'] = "gitlab-psql"
    ##! `SQL_USER_PASSWORD_HASH` can be generated using the command `gitlab-ctl pg-password-md5 gitlab`
    # postgresql['sql_user_password'] = 'SQL_USER_PASSWORD_HASH'
    # postgresql['uid'] = nil
    # postgresql['gid'] = nil
    # postgresql['shell'] = "/bin/sh"
    # postgresql['home'] = "/var/opt/gitlab/postgresql"
    # postgresql['user_path'] = "/opt/gitlab/embedded/bin:/opt/gitlab/bin:$PATH"
    # postgresql['sql_user'] = "gitlab"
    # postgresql['max_connections'] = 200
    # postgresql['md5_auth_cidr_addresses'] = []
    # postgresql['trust_auth_cidr_addresses'] = []
    # postgresql['wal_buffers'] = "-1"
    # postgresql['autovacuum_max_workers'] = "3"
    # postgresql['autovacuum_freeze_max_age'] = "200000000"
    # postgresql['log_statement'] = nil
    # postgresql['track_activity_query_size'] = "1024"
    # postgresql['shared_preload_libraries'] = nil
    # postgresql['dynamic_shared_memory_type'] = nil
    # postgresql['hot_standby'] = "off"

    ### SSL settings
    # See https://www.postgresql.org/docs/11/static/runtime-config-connection.html#GUC-SSL-CERT-FILE for more details
    # postgresql['ssl'] = 'on'
    # postgresql['hostssl'] = false
    # postgresql['ssl_ciphers'] = 'HIGH:MEDIUM:+3DES:!aNULL:!SSLv3:!TLSv1'
    # postgresql['ssl_cert_file'] = 'server.crt'
    # postgresql['ssl_key_file'] = 'server.key'
    # postgresql['ssl_ca_file'] = '/opt/gitlab/embedded/ssl/certs/cacert.pem'
    # postgresql['ssl_crl_file'] = nil
    # postgresql['cert_auth_addresses'] = {
    #   'ADDRESS' => {
    #     database: 'gitlabhq_production',
    #     user: 'gitlab'
    #   }
    # }

    ### Replication settings
    ###! Note, some replication settings do not require a full restart. They are documented below.
    # postgresql['wal_level'] = "hot_standby"
    # postgresql['wal_log_hints'] = 'off'
    # postgresql['max_wal_senders'] = 5
    # postgresql['max_replication_slots'] = 0
    # postgresql['max_locks_per_transaction'] = 128

    # Backup/Archive settings
    # postgresql['archive_mode'] = "off"

    ###! Changing any of these settings only requires a reload of postgresql. You do not need to
    ###! restart postgresql if you change any of these and run reconfigure.
    # postgresql['work_mem'] = "16MB"
    # postgresql['maintenance_work_mem'] = "16MB"
    # postgresql['checkpoint_segments'] = 10
    # postgresql['checkpoint_timeout'] = "5min"
    # postgresql['checkpoint_completion_target'] = 0.9
    # postgresql['effective_io_concurrency'] = 1
    # postgresql['checkpoint_warning'] = "30s"
    # postgresql['effective_cache_size'] = "1MB"
    # postgresql['shmmax'] =  17179869184 # or 4294967295
    # postgresql['shmall'] =  4194304 # or 1048575
    # postgresql['autovacuum'] = "on"
    # postgresql['log_autovacuum_min_duration'] = "-1"
    # postgresql['autovacuum_naptime'] = "1min"
    # postgresql['autovacuum_vacuum_threshold'] = "50"
    # postgresql['autovacuum_analyze_threshold'] = "50"
    # postgresql['autovacuum_vacuum_scale_factor'] = "0.02"
    # postgresql['autovacuum_analyze_scale_factor'] = "0.01"
    # postgresql['autovacuum_vacuum_cost_delay'] = "20ms"
    # postgresql['autovacuum_vacuum_cost_limit'] = "-1"
    # postgresql['statement_timeout'] = "60000"
    # postgresql['idle_in_transaction_session_timeout'] = "60000"
    # postgresql['log_line_prefix'] = "%a"
    # postgresql['max_worker_processes'] = 8
    # postgresql['max_parallel_workers_per_gather'] = 0
    # postgresql['log_lock_waits'] = 1
    # postgresql['deadlock_timeout'] = '5s'
    # postgresql['track_io_timing'] = 0
    # postgresql['default_statistics_target'] = 1000

    ### Available in PostgreSQL 9.6 and later
    # postgresql['min_wal_size'] = "80MB"
    # postgresql['max_wal_size'] = "1GB"

    # Backup/Archive settings
    # postgresql['archive_command'] = nil
    # postgresql['archive_timeout'] = "0"

    ### Replication settings
    # postgresql['sql_replication_user'] = "gitlab_replicator"
    # postgresql['sql_replication_password'] = "md5 hash of postgresql password" # You can generate with `gitlab-ctl pg-password-md5 <dbuser>`
    # postgresql['wal_keep_segments'] = 10
    # postgresql['max_standby_archive_delay'] = "30s"
    # postgresql['max_standby_streaming_delay'] = "30s"
    # postgresql['synchronous_commit'] = on
    # postgresql['synchronous_standby_names'] = ''
    # postgresql['hot_standby_feedback'] = 'off'
    # postgresql['random_page_cost'] = 2.0
    # postgresql['log_temp_files'] = -1
    # postgresql['log_checkpoints'] = 'off'
    # To add custom entries to pg_hba.conf use the following
    # postgresql['custom_pg_hba_entries'] = {
    #   APPLICATION: [ # APPLICATION should identify what the settings are used for
    #     {
    #       type: example,
    #       database: example,
    #       user: example,
    #       cidr: example,
    #       method: example,
    #       option: example
    #     }
    #   ]
    # }
    # See https://www.postgresql.org/docs/11/static/auth-pg-hba-conf.html for an explanation
    # of the values

    ### Version settings
    # Set this if you have disabled the bundled PostgreSQL but still want to use the backup rake tasks
    # postgresql['version'] = 10

    ################################################################################
    ## GitLab Redis
    ##! **Can be disabled if you are using your own Redis instance.**
    ##! Docs: https://docs.gitlab.com/omnibus/settings/redis.html
    ################################################################################

    redis['enable'] = false
    # redis['ha'] = false
    # redis['hz'] = 10
    # redis['dir'] = "/var/opt/gitlab/redis"
    # redis['log_directory'] = "/var/log/gitlab/redis"
    # redis['username'] = "gitlab-redis"
    # redis['group'] = "gitlab-redis"
    # redis['maxclients'] = "10000"
    # redis['maxmemory'] = "0"
    # redis['maxmemory_policy'] = "noeviction"
    # redis['maxmemory_samples'] = "5"
    # redis['tcp_backlog'] = 511
    # redis['tcp_timeout'] = "60"
    # redis['tcp_keepalive'] = "300"
    # redis['uid'] = nil
    # redis['gid'] = nil

    ### Disable or obfuscate unnecessary redis command names
    ### Uncomment and edit this block to add or remove entries.
    ### See https://docs.gitlab.com/omnibus/settings/redis.html#renamed-commands
    ### for detailed usage
    ###
    # redis['rename_commands'] = {
    #   'KEYS': ''
    #}
    #

    ###! **To enable only Redis service in this machine, uncomment
    ###!   one of the lines below (choose master or replica instance types).**
    ###! Docs: https://docs.gitlab.com/omnibus/settings/redis.html
    ###!       https://docs.gitlab.com/ee/administration/high_availability/redis.html
    # redis_master_role['enable'] = true
    # redis_replica_role['enable'] = true

    ### Redis TCP support (will disable UNIX socket transport)
    # redis['bind'] = '0.0.0.0' # or specify an IP to bind to a single one
    # redis['port'] = 6379
    # redis['password'] = 'redis-password-goes-here'

    ### Redis Sentinel support
    ###! **You need a master replica Redis replication to be able to do failover**
    ###! **Please read the documentation before enabling it to understand the
    ###!   caveats:**
    ###! Docs: https://docs.gitlab.com/ee/administration/high_availability/redis.html

    ### Replication support
    #### Replica Redis instance
    # redis['master'] = false # by default this is true

    #### Replica and Sentinel shared configuration
    ####! **Both need to point to the master Redis instance to get replication and
    ####!   heartbeat monitoring**
    # redis['master_name'] = 'gitlab-redis'
    # redis['master_ip'] = nil
    # redis['master_port'] = 6379

    #### Support to run redis replicas in a Docker or NAT environment
    ####! Docs: https://redis.io/topics/replication#configuring-replication-in-docker-and-nat
    # redis['announce_ip'] = nil
    # redis['announce_port'] = nil

    ####! **Master password should have the same value defined in
    ####!   redis['password'] to enable the instance to transition to/from
    ####!   master/replica in a failover event.**
    # redis['master_password'] = 'redis-password-goes-here'

    ####! Increase these values when your replicas can't catch up with master
    # redis['client_output_buffer_limit_normal'] = '0 0 0'
    # redis['client_output_buffer_limit_replica'] = '256mb 64mb 60'
    # redis['client_output_buffer_limit_pubsub'] = '32mb 8mb 60'

    #####! Redis snapshotting frequency
    #####! Set to [] to disable
    #####! Set to [''] to clear previously set values
    # redis['save'] = [ '900 1', '300 10', '60 10000' ]

    #####! Redis lazy freeing
    #####! Defaults to false
    # redis['lazyfree_lazy_eviction'] = true
    # redis['lazyfree_lazy_expire'] = true
    # redis['lazyfree_lazy_server_del'] = true
    # redis['replica_lazy_flush'] = true

    #####! Redis threaded I/O
    #####! Defaults to disabled
    # redis['io_threads'] = 4
    # redis['io_threads_do_reads'] = true

    ################################################################################
    ## GitLab Web server
    ##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html#using-a-non-bundled-web-server
    ################################################################################

    ##! When bundled nginx is disabled we need to add the external webserver user to
    ##! the GitLab webserver group.
    # web_server['external_users'] = []
    # web_server['username'] = 'gitlab-www'
    # web_server['group'] = 'gitlab-www'
    # web_server['uid'] = nil
    # web_server['gid'] = nil
    # web_server['shell'] = '/bin/false'
    # web_server['home'] = '/var/opt/gitlab/nginx'

    ################################################################################
    ## GitLab NGINX
    ##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html
    ################################################################################

    # nginx['enable'] = true
    # nginx['client_max_body_size'] = '250m'
    nginx['redirect_http_to_https'] = false
    # nginx['redirect_http_to_https_port'] = 80

    ##! Most root CA's are included by default
    # nginx['ssl_client_certificate'] = "/etc/gitlab/ssl/ca.crt"

    ##! enable/disable 2-way SSL client authentication
    # nginx['ssl_verify_client'] = "off"

    ##! if ssl_verify_client on, verification depth in the client certificates chain
    # nginx['ssl_verify_depth'] = "1"

    # nginx['ssl_certificate'] = "/etc/gitlab/ssl/#{node['fqdn']}.crt"
    # nginx['ssl_certificate_key'] = "/etc/gitlab/ssl/#{node['fqdn']}.key"
    # nginx['ssl_ciphers'] = "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256"
    # nginx['ssl_prefer_server_ciphers'] = "on"

    ##! **Recommended by: https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    ##!                   https://cipherli.st/**
    # nginx['ssl_protocols'] = "TLSv1.2 TLSv1.3"

    ##! **Recommended in: https://nginx.org/en/docs/http/ngx_http_ssl_module.html**
    # nginx['ssl_session_cache'] = "builtin:1000  shared:SSL:10m"

    ##! **Default according to https://nginx.org/en/docs/http/ngx_http_ssl_module.html**
    # nginx['ssl_session_timeout'] = "5m"

    # nginx['ssl_dhparam'] = nil # Path to dhparams.pem, eg. /etc/gitlab/ssl/dhparams.pem
    # nginx['listen_addresses'] = ['*', '[::]']

    ##! **Defaults to forcing web browsers to always communicate using only HTTPS**
    ##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html#setting-http-strict-transport-security
    # nginx['hsts_max_age'] = 31536000
    # nginx['hsts_include_subdomains'] = false

    ##! Defaults to stripping path information when making cross-origin requests
    # nginx['referrer_policy'] = 'strict-origin-when-cross-origin'

    ##! **Docs: http://nginx.org/en/docs/http/ngx_http_gzip_module.html**
    # nginx['gzip_enabled'] = true

    ##! **Override only if you use a reverse proxy**
    ##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html#setting-the-nginx-listen-port
    nginx['listen_port'] = 80

    ##! **Override only if your reverse proxy internally communicates over HTTP**
    ##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html#supporting-proxied-ssl
    nginx['listen_https'] = false

    # nginx['custom_gitlab_server_config'] = "\nserver_name code-ua.k3s gitlab.code-ua;\n"
    # nginx['custom_nginx_config'] = "include /etc/nginx/conf.d/example.conf;"
    # nginx['proxy_read_timeout'] = 3600
    # nginx['proxy_connect_timeout'] = 300
    # nginx['proxy_set_headers'] = {
    #  "Host" => "$http_host_with_default",
    #  "X-Real-IP" => "$remote_addr",
    #  "X-Forwarded-For" => "$proxy_add_x_forwarded_for",
    #  "X-Forwarded-Proto" => "https",
    #  "X-Forwarded-Ssl" => "on",
    #  "Upgrade" => "$http_upgrade",
    #  "Connection" => "$connection_upgrade"
    # }
    # nginx['proxy_cache_path'] = 'proxy_cache keys_zone=gitlab:10m max_size=1g levels=1:2'
    # nginx['proxy_cache'] = 'gitlab'
    # nginx['http2_enabled'] = true
    # nginx['real_ip_trusted_addresses'] = []
    # nginx['real_ip_header'] = nil
    # nginx['real_ip_recursive'] = nil
    # nginx['custom_error_pages'] = {
    #   '404' => {
    #     'title' => 'Example title',
    #     'header' => 'Example header',
    #     'message' => 'Example message'
    #   }
    # }

    ### Advanced settings
    # nginx['dir'] = "/var/opt/gitlab/nginx"
    # nginx['log_directory'] = "/var/log/gitlab/nginx"
    # nginx['worker_processes'] = 4
    # nginx['worker_connections'] = 10240
    # nginx['log_format'] = '$remote_addr - $remote_user [$time_local] "$request_method $filtered_request_uri $server_protocol" $status $body_bytes_sent "$filtered_http_referer" "$http_user_agent" $gzip_ratio'
    # nginx['sendfile'] = 'on'
    # nginx['tcp_nopush'] = 'on'
    # nginx['tcp_nodelay'] = 'on'
    # nginx['gzip'] = "on"
    # nginx['gzip_http_version'] = "1.0"
    # nginx['gzip_comp_level'] = "2"
    # nginx['gzip_proxied'] = "any"
    # nginx['gzip_types'] = [ "text/plain", "text/css", "application/x-javascript", "text/xml", "application/xml", "application/xml+rss", "text/javascript", "application/json" ]
    # nginx['keepalive_timeout'] = 65
    # nginx['cache_max_size'] = '5000m'
    # nginx['server_names_hash_bucket_size'] = 64
    ##! These paths have proxy_request_buffering disabled
    # nginx['request_buffering_off_path_regex'] = "/api/v\\d/jobs/\\d+/artifacts$|\\.git/git-receive-pack$|\\.git/gitlab-lfs/objects|\\.git/info/lfs/objects/batch$"

    ### Nginx status
    # nginx['status'] = {
    #  "enable" => true,
    #  "listen_addresses" => ["127.0.0.1"],
    #  "fqdn" => "dev.example.com",
    #  "port" => 9999,
    #  "vts_enable" => true,
    #  "options" => {
    #    "server_tokens" => "off", # Don't show the version of NGINX
    #    "access_log" => "off", # Disable logs for stats
    #    "allow" => "127.0.0.1", # Only allow access from localhost
    #    "deny" => "all" # Deny access to anyone else
    #  }
    # }

    ################################################################################
    ## GitLab Logging
    ##! Docs: https://docs.gitlab.com/omnibus/settings/logs.html
    ################################################################################

    # logging['svlogd_size'] = 200 * 1024 * 1024 # rotate after 200 MB of log data
    # logging['svlogd_num'] = 30 # keep 30 rotated log files
    # logging['svlogd_timeout'] = 24 * 60 * 60 # rotate after 24 hours
    # logging['svlogd_filter'] = "gzip" # compress logs with gzip
    # logging['svlogd_udp'] = nil # transmit log messages via UDP
    # logging['svlogd_prefix'] = nil # custom prefix for log messages
    # logging['logrotate_frequency'] = "daily" # rotate logs daily
    # logging['logrotate_maxsize'] = nil # rotate logs when they grow bigger than size bytes even before the specified time interval (daily, weekly, monthly, or yearly)
    # logging['logrotate_size'] = nil # do not rotate by size by default
    # logging['logrotate_rotate'] = 30 # keep 30 rotated logs
    # logging['logrotate_compress'] = "compress" # see 'man logrotate'
    # logging['logrotate_method'] = "copytruncate" # see 'man logrotate'
    # logging['logrotate_postrotate'] = nil # no postrotate command by default
    # logging['logrotate_dateformat'] = nil # use date extensions for rotated files rather than numbers e.g. a value of "-%Y-%m-%d" would give rotated files like production.log-2016-03-09.gz

    ### UDP log forwarding
    ##! Docs: http://docs.gitlab.com/omnibus/settings/logs.html#udp-log-forwarding

    ##! remote host to ship log messages to via UDP
    # logging['udp_log_shipping_host'] = nil

    ##! override the hostname used when logs are shipped via UDP,
    ##  by default the system hostname will be used.
    # logging['udp_log_shipping_hostname'] = nil

    ##! remote port to ship log messages to via UDP
    # logging['udp_log_shipping_port'] = 514

    ################################################################################
    ## Logrotate
    ##! Docs: https://docs.gitlab.com/omnibus/settings/logs.html#logrotate
    ##! You can disable built in logrotate feature.
    ################################################################################
    # logrotate['enable'] = true
    # logrotate['log_directory'] = "/var/log/gitlab/logrotate"

    ################################################################################
    ## Users and groups accounts
    ##! Disable management of users and groups accounts.
    ##! **Set only if creating accounts manually**
    ##! Docs: https://docs.gitlab.com/omnibus/settings/configuration.html#disable-user-and-group-account-management
    ################################################################################

    # manage_accounts['enable'] = false

    ################################################################################
    ## Storage directories
    ##! Disable managing storage directories
    ##! Docs: https://docs.gitlab.com/omnibus/settings/configuration.html#disable-storage-directories-management
    ################################################################################

    ##! **Set only if the select directories are created manually**
    # manage_storage_directories['enable'] = false
    # manage_storage_directories['manage_etc'] = false

    ################################################################################
    ## Runtime directory
    ##! Docs: https://docs.gitlab.com//omnibus/settings/configuration.html#configuring-runtime-directory
    ################################################################################

    # runtime_dir '/run'

    ################################################################################
    ## Git
    ##! Advanced setting for configuring git system settings for omnibus-gitlab
    ##! internal git
    ################################################################################

    ##! For multiple options under one header use array of comma separated values,
    ##! eg.:
    ##! { "receive" => ["fsckObjects = true"], "alias" => ["st = status", "co = checkout"] }

    # omnibus_gitconfig['system'] = {
    #  "pack" => ["threads = 1"],
    #  "receive" => ["fsckObjects = true", "advertisePushOptions = true"],
    #  "repack" => ["writeBitmaps = true"],
    #  "transfer" => ["hideRefs=^refs/tmp/", "hideRefs=^refs/keep-around/", "hideRefs=^refs/remotes/"],
    #  "core" => [
    #    'alternateRefsCommand="exit 0 #"',
    #    "fsyncObjectFiles = true"
    #  ],
    #  "fetch" => ["writeCommitGraph = true"]
    # }

    ################################################################################
    ## GitLab Pages
    ##! Docs: https://docs.gitlab.com/ee/pages/administration.html
    ################################################################################

    ##! Define to enable GitLab Pages
    # pages_external_url "http://pages.example.com/"
    gitlab_pages['enable'] = false

    ##! Configure to expose GitLab Pages on external IP address, serving the HTTP
    # gitlab_pages['external_http'] = []

    ##! Configure to expose GitLab Pages on external IP address, serving the HTTPS
    # gitlab_pages['external_https'] = []

    ##! Configure to expose GitLab Pages on external IP address, serving the HTTPS over PROXYv2
    # gitlab_pages['external_https_proxyv2'] = []

    ##! Configure cert when using external IP address
    # gitlab_pages['cert'] = "/etc/gitlab/ssl/#{Gitlab['gitlab_pages']['domain']}.crt"
    # gitlab_pages['cert_key'] = "/etc/gitlab/ssl/#{Gitlab['gitlab_pages']['domain']}.key"

    ##! Configure to use the default list of cipher suites
    # gitlab_pages['insecure_ciphers'] = false

    ##! Configure to enable health check endpoint on GitLab Pages
    # gitlab_pages['status_uri'] = "/@status"

    ##! Tune the maximum number of concurrent connections GitLab Pages will handle.
    ##! Default to 0 for unlimited connections.
    # gitlab_pages['max_connections'] = 0

    ##! Setting the propagate_correlation_id to true allows installations behind a reverse proxy
    ##! generate and set a correlation ID to requests sent to GitLab Pages. If a reverse proxy
    ##! sets the header value X-Request-ID, the value will be propagated in the request chain.
    # gitlab_pages['propagate_correlation_id'] = false

    ##! Configure to use JSON structured logging in GitLab Pages
    # gitlab_pages['log_format'] = "json"

    ##! Configure verbose logging for GitLab Pages
    # gitlab_pages['log_verbose'] = false

    ##! Error Reporting and Logging with Sentry
    # gitlab_pages['sentry_enabled'] = false
    # gitlab_pages['sentry_dsn'] = 'https://<key>@sentry.io/<project>'
    # gitlab_pages['sentry_environment'] = 'production'

    ##! Listen for requests forwarded by reverse proxy
    # gitlab_pages['listen_proxy'] = "localhost:8090"

    # gitlab_pages['redirect_http'] = true
    # gitlab_pages['use_http2'] = true
    # gitlab_pages['dir'] = "/var/opt/gitlab/gitlab-pages"
    # gitlab_pages['log_directory'] = "/var/log/gitlab/gitlab-pages"

    # gitlab_pages['artifacts_server'] = true
    # gitlab_pages['artifacts_server_url'] = nil # Defaults to external_url + '/api/v4'
    # gitlab_pages['artifacts_server_timeout'] = 10

    ##! Environments that do not support bind-mounting should set this parameter to
    ##! true. This is incompatible with the artifacts server
    # gitlab_pages['inplace_chroot'] = false

    ##! Prometheus metrics for Pages docs: https://gitlab.com/gitlab-org/gitlab-pages/#enable-prometheus-metrics
    # gitlab_pages['metrics_address'] = ":9235"

    ##! Specifies the minimum TLS version ("tls1.2" or "tls1.3")
    # gitlab_pages['tls_min_version'] = "tls1.2"

    ##! Specifies the maximum TLS version ("tls1.2" or "tls1.3")
    # gitlab_pages['tls_max_version'] = "tls1.3"

    ##! Pages access control
    # gitlab_pages['access_control'] = false
    # gitlab_pages['gitlab_id'] = nil # Automatically generated if not present
    gitlab_pages['gitlab_secret'] = "testtesttest"
    # gitlab_pages['auth_redirect_uri'] = nil # Defaults to projects subdomain of pages_external_url and + '/auth'
    # gitlab_pages['gitlab_server'] = nil # Defaults to external_url
    # gitlab_pages['internal_gitlab_server'] = nil # Defaults to gitlab_server, can be changed to internal load balancer
    gitlab_pages['auth_secret'] = "testtesttest"
    # gitlab_pages['auth_scope'] = nil # Defaults to api, can be changed to read_api to increase security

    ##! GitLab API HTTP client connection timeout
    # gitlab_pages['gitlab_client_http_timeout'] = "10s"

    ##! GitLab API JWT Token expiry time
    # gitlab_pages['gitlab_client_jwt_expiry'] = "30s"

    ##! Domain configuration source, defaults to disk if set to nil
    # gitlab_pages['domain_config_source'] = nil

    ##! Advanced settings for API-based configuration for GitLab Pages.
    ##! The recommended default values are set inside GitLab Pages.
    ##! Should be changed only if absolutely needed.

    ##! The maximum time a domain's configuration is stored in the cache.
    # gitlab_pages['gitlab_cache_expiry'] = "600s"
    ##! The interval at which a domain's configuration is set to be due to refresh (default: 60s).
    # gitlab_pages['gitlab_cache_refresh'] = "60s"
    ##! The interval at which expired items are removed from the cache (default: 60s).
    # gitlab_pages['gitlab_cache_cleanup'] = "60s"
    ##! The maximum time to wait for a response from the GitLab API per request.
    # gitlab_pages['gitlab_retrieval_timeout'] = "30s"
    ##! The interval to wait before retrying to resolve a domain's configuration via the GitLab API.
    # gitlab_pages['gitlab_retrieval_interval'] = "1s"
    ##! The maximum number of times to retry to resolve a domain's configuration via the API
    # gitlab_pages['gitlab_retrieval_retries'] = 3

    ##! Define custom gitlab-pages HTTP headers for the whole instance
    # gitlab_pages['headers'] = []

    ##! Shared secret used for authentication between Pages and GitLab
    gitlab_pages['api_secret_key'] = "CzZyG/VgDR0hUGhqMPEcNLMbSsuCfXzwbrSoa+9kYQM="

    ##! Advanced settings for serving GitLab Pages from zip archives.
    ##! The recommended default values are set inside GitLab Pages.
    ##! Should be changed only if absolutely needed.

    ##! The maximum time an archive will be cached in memory.
    # gitlab_pages['zip_cache_expiration'] = "60s"
    ##! Zip archive cache cleaning interval.
    # gitlab_pages['zip_cache_cleanup'] = "30s"
    ##! The interval to refresh a cache archive if accessed before expiring.
    # gitlab_pages['zip_cache_refresh'] = "30s"
    ##! The maximum amount of time it takes to open a zip archive from the file system or object storage.
    # gitlab_pages['zip_open_timeout'] = "30s"

    # gitlab_pages['env_directory'] = "/opt/gitlab/etc/gitlab-pages/env"
    # gitlab_pages['env'] = {
    #   'SSL_CERT_DIR' => "#{node['package']['install-dir']}/embedded/ssl/certs/"
    # }

    ################################################################################
    ## GitLab Pages NGINX
    ################################################################################

    # All the settings defined in the "GitLab Nginx" section are also available in
    # this "GitLab Pages NGINX" section, using the key `pages_nginx`.  However,
    # those settings should be explicitly set. That is, settings given as
    # `nginx['some_setting']` WILL NOT be automatically replicated as
    # `pages_nginx['some_setting']` and should be set separately.

    # Below you can find settings that are exclusive to "GitLab Pages NGINX"
    # pages_nginx['enable'] = true

    # gitlab_rails['pages_path'] = "/var/opt/gitlab/gitlab-rails/shared/pages"

    ################################################################################
    ## GitLab CI
    ##! Docs: https://docs.gitlab.com/ee/ci/quick_start/README.html
    ################################################################################

    # gitlab_ci['gitlab_ci_all_broken_builds'] = true
    # gitlab_ci['gitlab_ci_add_pusher'] = true
    # gitlab_ci['builds_directory'] = '/var/opt/gitlab/gitlab-ci/builds'

    ################################################################################
    ## GitLab Kubernetes Agent Server
    ##! Docs: https://gitlab.com/gitlab-org/cluster-integration/gitlab-agent/blob/master/README.md
    ################################################################################

    ##! Settings used by the GitLab application
    # gitlab_rails['gitlab_kas_enabled'] = true
    # gitlab_rails['gitlab_kas_external_url'] = ws://gitlab.example.com/-/kubernetes-agent
    # gitlab_rails['gitlab_kas_internal_url'] = grpc://localhost:8153

    ##! Enable GitLab KAS
    # gitlab_kas['enable'] = true

    ##! Agent configuration for GitLab KAS
    # gitlab_kas['agent_configuration_poll_period'] = 20
    # gitlab_kas['agent_gitops_poll_period'] = 20
    # gitlab_kas['agent_gitops_project_info_cache_ttl'] = 300
    # gitlab_kas['agent_gitops_project_info_cache_error_ttl'] = 60
    # gitlab_kas['agent_info_cache_ttl'] = 300
    # gitlab_kas['agent_info_cache_error_ttl'] = 60

    ##! Shared secret used for authentication between KAS and GitLab
    # gitlab_kas['api_secret_key'] = nil # Will be generated if not set. Base64 encoded and exactly 32 bytes long.

    ##! Listen configuration for GitLab KAS
    # gitlab_kas['listen_address'] = 'localhost:8150'
    # gitlab_kas['listen_network'] = 'tcp'
    # gitlab_kas['listen_websocket'] = true
    # gitlab_kas['internal_api_listen_network'] = 'tcp'
    # gitlab_kas['internal_api_listen_address'] = 'localhost:8153'

    ##! Metrics configuration for GitLab KAS
    # gitlab_kas['metrics_usage_reporting_period'] = 60

    ##! Directories for GitLab KAS
    # gitlab_kas['dir'] = '/var/opt/gitlab/gitlab-kas'
    # gitlab_kas['log_directory'] = '/var/log/gitlab/gitlab-kas'
    # gitlab_kas['env_directory'] = '/opt/gitlab/etc/gitlab-kas/env'

    ################################################################################
    ## GitLab Mattermost
    ##! Docs: https://docs.gitlab.com/omnibus/gitlab-mattermost
    ################################################################################

    # mattermost_external_url 'http://mattermost.example.com'

    # mattermost['enable'] = false
    # mattermost['username'] = 'mattermost'
    # mattermost['group'] = 'mattermost'
    # mattermost['uid'] = nil
    # mattermost['gid'] = nil
    # mattermost['home'] = '/var/opt/gitlab/mattermost'
    # mattermost['database_name'] = 'mattermost_production'
    # mattermost['env'] = {
    #   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
    # }
    # mattermost['service_address'] = "127.0.0.1"
    # mattermost['service_port'] = "8065"
    # mattermost['service_site_url'] = nil
    # mattermost['service_allowed_untrusted_internal_connections'] = ""
    # mattermost['service_enable_api_team_deletion'] = true
    # mattermost['team_site_name'] = "GitLab Mattermost"
    # mattermost['sql_driver_name'] = 'mysql'
    # mattermost['sql_data_source'] = "mmuser:mostest@tcp(dockerhost:3306)/mattermost_test?charset=utf8mb4,utf8"
    # mattermost['log_file_directory'] = '/var/log/gitlab/mattermost/'
    # mattermost['gitlab_enable'] = false
    # mattermost['gitlab_id'] = "12345656"
    # mattermost['gitlab_secret'] = "123456789"
    # mattermost['gitlab_scope'] = ""
    # mattermost['gitlab_auth_endpoint'] = "http://gitlab.example.com/oauth/authorize"
    # mattermost['gitlab_token_endpoint'] = "http://gitlab.example.com/oauth/token"
    # mattermost['gitlab_user_api_endpoint'] = "http://gitlab.example.com/api/v4/user"
    # mattermost['file_directory'] = "/var/opt/gitlab/mattermost/data"
    # mattermost['plugin_directory'] = "/var/opt/gitlab/mattermost/plugins"
    # mattermost['plugin_client_directory'] = "/var/opt/gitlab/mattermost/client-plugins"

    ################################################################################
    ## Mattermost NGINX
    ################################################################################

    # All the settings defined in the "GitLab Nginx" section are also available in
    # this "Mattermost NGINX" section, using the key `mattermost_nginx`.  However,
    # those settings should be explicitly set. That is, settings given as
    # `nginx['some_setting']` WILL NOT be automatically replicated as
    # `mattermost_nginx['some_setting']` and should be set separately.

    # Below you can find settings that are exclusive to "Mattermost NGINX"
    # mattermost_nginx['enable'] = false

    # mattermost_nginx['custom_gitlab_mattermost_server_config'] = "location ^~ /foo-namespace/bar-project/raw/ {\n deny all;\n}\n"
    # mattermost_nginx['proxy_set_headers'] = {
    #   "Host" => "$http_host",
    #   "X-Real-IP" => "$remote_addr",
    #   "X-Forwarded-For" => "$proxy_add_x_forwarded_for",
    #   "X-Frame-Options" => "SAMEORIGIN",
    #   "X-Forwarded-Proto" => "https",
    #   "X-Forwarded-Ssl" => "on",
    #   "Upgrade" => "$http_upgrade",
    #   "Connection" => "$connection_upgrade"
    # }


    ################################################################################
    ## Registry NGINX
    ################################################################################

    # All the settings defined in the "GitLab Nginx" section are also available in
    # this "Registry NGINX" section, using the key `registry_nginx`.  However, those
    # settings should be explicitly set. That is, settings given as
    # `nginx['some_setting']` WILL NOT be automatically replicated as
    # `registry_nginx['some_setting']` and should be set separately.

    # Below you can find settings that are exclusive to "Registry NGINX"
    # registry_nginx['enable'] = false

    # registry_nginx['proxy_set_headers'] = {
    #  "Host" => "$http_host",
    #  "X-Real-IP" => "$remote_addr",
    #  "X-Forwarded-For" => "$proxy_add_x_forwarded_for",
    #  "X-Forwarded-Proto" => "https",
    #  "X-Forwarded-Ssl" => "on"
    # }

    # When the registry is automatically enabled using the same domain as `external_url`,
    # it listens on this port
    # registry_nginx['listen_port'] = 5050

    ################################################################################
    ## Prometheus
    ##! Docs: https://docs.gitlab.com/ee/administration/monitoring/prometheus/
    ################################################################################

    ###! **To enable only Monitoring service in this machine, uncomment
    ###!   the line below.**
    ###! Docs: https://docs.gitlab.com/ee/administration/high_availability
    # monitoring_role['enable'] = true

    prometheus['enable'] = false
    # prometheus['monitor_kubernetes'] = true
    # prometheus['username'] = 'gitlab-prometheus'
    # prometheus['group'] = 'gitlab-prometheus'
    # prometheus['uid'] = nil
    # prometheus['gid'] = nil
    # prometheus['shell'] = '/bin/sh'
    # prometheus['home'] = '/var/opt/gitlab/prometheus'
    # prometheus['log_directory'] = '/var/log/gitlab/prometheus'
    # prometheus['rules_files'] = ['/var/opt/gitlab/prometheus/rules/*.rules']
    # prometheus['scrape_interval'] = 15
    # prometheus['scrape_timeout'] = 15
    # prometheus['external_labels'] = { }
    # prometheus['env_directory'] = '/opt/gitlab/etc/prometheus/env'
    # prometheus['env'] = {
    #   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
    # }
    #
    ### Custom scrape configs
    #
    # Prometheus can scrape additional jobs via scrape_configs.  The default automatically
    # includes all of the exporters supported by the omnibus config.
    #
    # See: https://prometheus.io/docs/operating/configuration/#<scrape_config>
    #
    # Example:
    #
    # prometheus['scrape_configs'] = [
    #   {
    #     'job_name': 'example',
    #     'static_configs' => [
    #       'targets' => ['hostname:port'],
    #     ],
    #   },
    # ]
    #
    ### Custom alertmanager config
    #
    # To configure external alertmanagers, create an alertmanager config.
    #
    # See: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alertmanager_config
    #
    # prometheus['alertmanagers'] = [
    #   {
    #     'static_configs' => [
    #       {
    #         'targets' => [
    #           'hostname:port'
    #         ]
    #       }
    #     ]
    #   }
    # ]
    #
    ### Custom Prometheus flags
    #
    # prometheus['flags'] = {
    #   'storage.tsdb.path' => "/var/opt/gitlab/prometheus/data",
    #   'storage.tsdb.retention.time' => "15d",
    #   'config.file' => "/var/opt/gitlab/prometheus/prometheus.yml"
    # }

    ##! Advanced settings. Should be changed only if absolutely needed.
    # prometheus['listen_address'] = 'localhost:9090'
    #

    ################################################################################
    ###! **Only needed if Prometheus and Rails are not on the same server.**
    ### For example, in a multi-node architecture, Prometheus will be installed on the monitoring node, while Rails will be on the Rails node.
    ### https://docs.gitlab.com/ee/administration/monitoring/prometheus/index.html#using-an-external-prometheus-server
    ### This value should be the address at which Prometheus is available to GitLab Rails(Puma/Unicorn, Sidekiq) node.
    ################################################################################
    # gitlab_rails['prometheus_address'] = 'your.prom:9090'

    ################################################################################
    ## Prometheus Alertmanager
    ################################################################################

    alertmanager['enable'] = false
    # alertmanager['home'] = '/var/opt/gitlab/alertmanager'
    # alertmanager['log_directory'] = '/var/log/gitlab/alertmanager'
    # alertmanager['admin_email'] = 'admin@example.com'
    # alertmanager['flags'] = {
    #   'web.listen-address' => "localhost:9093",
    #   'storage.path' => "/var/opt/gitlab/alertmanager/data",
    #   'config.file' => "/var/opt/gitlab/alertmanager/alertmanager.yml"
    # }
    # alertmanager['env_directory'] = '/opt/gitlab/etc/alertmanager/env'
    # alertmanager['env'] = {
    #   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
    # }

    ##! Advanced settings. Should be changed only if absolutely needed.
    # alertmanager['listen_address'] = 'localhost:9093'
    # alertmanager['global'] = {}

    ################################################################################
    ## Prometheus Node Exporter
    ##! Docs: https://docs.gitlab.com/ee/administration/monitoring/prometheus/node_exporter.html
    ################################################################################

    node_exporter['enable'] = true
    # node_exporter['home'] = '/var/opt/gitlab/node-exporter'
    # node_exporter['log_directory'] = '/var/log/gitlab/node-exporter'
    # node_exporter['flags'] = {
    #   'collector.textfile.directory' => "/var/opt/gitlab/node-exporter/textfile_collector"
    # }
    # node_exporter['env_directory'] = '/opt/gitlab/etc/node-exporter/env'
    # node_exporter['env'] = {
    #   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
    # }

    ##! Advanced settings. Should be changed only if absolutely needed.
    node_exporter['listen_address'] = '0.0.0.0:9100'

    ################################################################################
    ## Prometheus Redis exporter
    ##! Docs: https://docs.gitlab.com/ee/administration/monitoring/prometheus/redis_exporter.html
    ################################################################################

    redis_exporter['enable'] = false
    # redis_exporter['log_directory'] = '/var/log/gitlab/redis-exporter'
    # redis_exporter['flags'] = {
    #   'redis.addr' => "unix:///var/opt/gitlab/redis/redis.socket",
    # }
    # redis_exporter['env_directory'] = '/opt/gitlab/etc/redis-exporter/env'
    # redis_exporter['env'] = {
    #   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
    # }

    ##! Advanced settings. Should be changed only if absolutely needed.
    # redis_exporter['listen_address'] = 'localhost:9121'

    ################################################################################
    ## Prometheus Postgres exporter
    ##! Docs: https://docs.gitlab.com/ee/administration/monitoring/prometheus/postgres_exporter.html
    ################################################################################

    postgres_exporter['enable'] = false
    # postgres_exporter['home'] = '/var/opt/gitlab/postgres-exporter'
    # postgres_exporter['log_directory'] = '/var/log/gitlab/postgres-exporter'
    # postgres_exporter['flags'] = {}
    # postgres_exporter['listen_address'] = 'localhost:9187'
    # postgres_exporter['env_directory'] = '/opt/gitlab/etc/postgres-exporter/env'
    # postgres_exporter['env'] = {
    #   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
    # }
    # postgres_exporter['sslmode'] = nil
    # postgres_exporter['per_table_stats'] = false

    ################################################################################
    ## Prometheus PgBouncer exporter (EE only)
    ##! Docs: https://docs.gitlab.com/ee/administration/monitoring/prometheus/pgbouncer_exporter.html
    ################################################################################

    pgbouncer_exporter['enable'] = false
    # pgbouncer_exporter['log_directory'] = "/var/log/gitlab/pgbouncer-exporter"
    # pgbouncer_exporter['listen_address'] = 'localhost:9188'
    # pgbouncer_exporter['env_directory'] = '/opt/gitlab/etc/pgbouncer-exporter/env'
    # pgbouncer_exporter['env'] = {
    #   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
    # }

    ################################################################################
    ## Prometheus Gitlab exporter
    ##! Docs: https://docs.gitlab.com/ee/administration/monitoring/prometheus/gitlab_exporter.html
    ################################################################################


    gitlab_exporter['enable'] = true
    gitlab_exporter['log_directory'] = "/var/log/gitlab/gitlab-exporter"
    gitlab_exporter['home'] = "/var/opt/gitlab/gitlab-exporter"

    ##! Advanced settings. Should be changed only if absolutely needed.
    gitlab_exporter['server_name'] = 'webrick'
    gitlab_exporter['listen_address'] = '0.0.0.0'
    gitlab_exporter['listen_port'] = '9168'

    ##! Manage gitlab-exporter sidekiq probes. false by default when Sentinels are
    ##! found.
    # gitlab_exporter['probe_sidekiq'] = true

    # To completely disable prometheus, and all of it's exporters, set to false
    # prometheus_monitoring['enable'] = true

    ################################################################################
    ## Grafana Dashboards
    ##! Docs: https://docs.gitlab.com/ee/administration/monitoring/prometheus/#prometheus-as-a-grafana-data-source
    ################################################################################

    grafana['enable'] = false
    # grafana['log_directory'] = '/var/log/gitlab/grafana'
    # grafana['home'] = '/var/opt/gitlab/grafana'
    # grafana['admin_password'] = 'admin'
    # grafana['allow_user_sign_up'] = false
    # grafana['basic_auth_enabled'] = false
    # grafana['disable_login_form'] = true
    # grafana['gitlab_application_id'] = 'GITLAB_APPLICATION_ID'
    # grafana['gitlab_secret'] = 'GITLAB_SECRET'
    # grafana['env_directory'] = '/opt/gitlab/etc/grafana/env'
    # grafana['allowed_groups'] = []
    # grafana['gitlab_auth_sign_up'] = true
    # grafana['env'] = {
    #   'SSL_CERT_DIR' => "#{node['package']['install-dir']}/embedded/ssl/certs/"
    # }
    # grafana['metrics_enabled'] = false
    # grafana['metrics_basic_auth_username'] = 'grafana_metrics' # default: nil
    # grafana['metrics_basic_auth_password'] = 'please_set_a_unique_password' # default: nil
    # grafana['alerting_enabled'] = false

    ### SMTP Configuration
    #
    # See: http://docs.grafana.org/administration/configuration/#smtp
    #
    # grafana['smtp'] = {
    #   'enabled' => true,
    #   'host' => 'localhost:25',
    #   'user' => nil,
    #   'password' => nil,
    #   'cert_file' => nil,
    #   'key_file' => nil,
    #   'skip_verify' => false,
    #   'from_address' => 'admin@grafana.localhost',
    #   'from_name' => 'Grafana',
    #   'ehlo_identity' => 'dashboard.example.com',
    #   'startTLS_policy' => nil
    # }

    # Grafana usage reporting defaults to gitlab_rails['usage_ping_enabled']
    # grafana['reporting_enabled'] = true

    ### Dashboards
    #
    # See: http://docs.grafana.org/administration/provisioning/#dashboards
    #
    # NOTE: Setting this will override the default.
    #
    # grafana['dashboards'] = [
    #   {
    #     'name' => 'GitLab Omnibus',
    #     'orgId' => 1,
    #     'folder' => 'GitLab Omnibus',
    #     'type' => 'file',
    #     'disableDeletion' => true,
    #     'updateIntervalSeconds' => 600,
    #     'options' => {
    #       'path' => '/opt/gitlab/embedded/service/grafana-dashboards',
    #     }
    #   }
    # ]

    ### Datasources
    #
    # See: http://docs.grafana.org/administration/provisioning/#example-datasource-config-file
    #
    # NOTE: Setting this will override the default.
    #
    # grafana['datasources'] = [
    #   {
    #     'name' => 'GitLab Omnibus',
    #     'type' => 'prometheus',
    #     'access' => 'proxy',
    #     'url' => 'http://localhost:9090'
    #   }
    # ]

    ##! Advanced settings. Should be changed only if absolutely needed.
    # grafana['http_addr'] = 'localhost'
    # grafana['http_port'] = 3000

    ################################################################################
    ## Gitaly
    ##! Docs:
    ################################################################################

    # The gitaly['enable'] option exists for the purpose of cluster
    # deployments, see https://docs.gitlab.com/ee/administration/gitaly/index.html .
    gitaly['enable'] = false
    # gitaly['dir'] = "/var/opt/gitlab/gitaly"
    # gitaly['log_directory'] = "/var/log/gitlab/gitaly"
    # gitaly['bin_path'] = "/opt/gitlab/embedded/bin/gitaly"
    # gitaly['env_directory'] = "/opt/gitlab/etc/gitaly/env"
    # gitaly['env'] = {
    #  'PATH' => "/opt/gitlab/bin:/opt/gitlab/embedded/bin:/bin:/usr/bin",
    #  'HOME' => '/var/opt/gitlab',
    #  'TZ' => ':/etc/localtime',
    #  'PYTHONPATH' => "/opt/gitlab/embedded/lib/python3.7/site-packages",
    #  'ICU_DATA' => "/opt/gitlab/embedded/share/icu/current",
    #  'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/",
    #  'WRAPPER_JSON_LOGGING' => true
    # }

    ##! internal_socket_dir is the directory that will contain internal gitaly sockets,
    ##! separate from socket_path which is the socket that external clients listen on

    # gitaly['internal_socket_dir'] = "/var/opt/gitlab/gitaly"
    # gitaly['socket_path'] = "/var/opt/gitlab/gitaly/gitaly.socket"
    # gitaly['listen_addr'] = "localhost:8075"
    # gitaly['tls_listen_addr'] = "localhost:9075"
    # gitaly['certificate_path'] = "/var/opt/gitlab/gitaly/certificate.pem"
    # gitaly['key_path'] = "/var/opt/gitlab/gitaly/key.pem"
    # gitaly['prometheus_listen_addr'] = "localhost:9236"
    # gitaly['logging_level'] = "warn"
    # gitaly['logging_format'] = "json"
    # gitaly['logging_sentry_dsn'] = "https://<key>:<secret>@sentry.io/<project>"
    # gitaly['logging_ruby_sentry_dsn'] = "https://<key>:<secret>@sentry.io/<project>"
    # gitaly['logging_sentry_environment'] = "production"
    # gitaly['prometheus_grpc_latency_buckets'] = "[0.001, 0.005, 0.025, 0.1, 0.5, 1.0, 10.0, 30.0, 60.0, 300.0, 1500.0]"
    # gitaly['auth_token'] = '<secret>'
    # gitaly['auth_transitioning'] = false # When true, auth is logged to Prometheus but NOT enforced
    # gitaly['graceful_restart_timeout'] = '1m' # Grace time for a gitaly process to finish ongoing requests
    # gitaly['git_catfile_cache_size'] = 100 # Number of 'git cat-file' processes kept around for re-use
    # gitaly['git_bin_path'] = "/opt/gitlab/embedded/bin/git" # A custom path for the 'git' executable
    # gitaly['open_files_ulimit'] = 15000 # Maximum number of open files allowed for the gitaly process
    # gitaly['ruby_max_rss'] = 300000000 # RSS threshold in bytes for triggering a gitaly-ruby restart
    # gitaly['ruby_graceful_restart_timeout'] = '10m' # Grace time for a gitaly-ruby process to finish ongoing requests
    # gitaly['ruby_restart_delay'] = '5m' # Period of sustained high RSS that needs to be observed before restarting gitaly-ruby
    # gitaly['ruby_rugged_git_config_search_path'] = "/opt/gitlab/embedded/etc" # Location of system-wide gitconfig file
    # gitaly['ruby_num_workers'] = 3 # Number of gitaly-ruby worker processes. Minimum 2, default 2.
    # gitaly['concurrency'] = [
    #   {
    #     'rpc' => "/gitaly.SmartHTTPService/PostReceivePack",
    #     'max_per_repo' => 20
    #   }, {
    #     'rpc' => "/gitaly.SSHService/SSHUploadPack",
    #     'max_per_repo' => 5
    #   }
    # ]
    #
    # gitaly['daily_maintenance_start_hour'] = 22
    # gitaly['daily_maintenance_start_minute'] = 30
    # gitaly['daily_maintenance_duration'] = '30m'
    # gitaly['daily_maintenance_storages'] = ["default"]
    # gitaly['daily_maintenance_disabled'] = false
    # gitaly['cgroups_count'] = 10
    # gitaly['cgroups_mountpoint'] = '/sys/fs/cgroup'
    # gitaly['cgroups_hierarchy_root'] = 'gitaly'
    # gitaly['cgroups_memory_enabled'] = true
    # gitaly['cgroups_memory_limit'] = 1048576
    # gitaly['cgroups_cpu_enabled'] = true
    # gitaly['cgroups_cpu_shares'] = 512
    # gitaly['pack_objects_cache_enabled'] = true
    # gitaly['pack_objects_cache_dir'] = '/var/opt/gitlab/git-data/repositories/+gitaly/PackObjectsCache'
    # gitaly['pack_objects_cache_max_age'] = '5m'

    ################################################################################
    ## Praefect
    ##! Docs: https://gitlab.com/gitlab-org/gitaly/blob/master/doc/design_ha.md
    ################################################################################

    # praefect['enable'] = false
    # praefect['dir'] = "/var/opt/gitlab/praefect"
    # praefect['log_directory'] = "/var/log/gitlab/praefect"
    # praefect['env_directory'] = "/opt/gitlab/etc/praefect/env"
    # praefect['env'] = {
    #  'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/",
    #  'GITALY_PID_FILE' => "/var/opt/gitlab/praefect/praefect.pid",
    #  'WRAPPER_JSON_LOGGING' => true
    # }
    # praefect['wrapper_path'] = "/opt/gitlab/embedded/bin/gitaly-wrapper"
    # praefect['virtual_storage_name'] = "praefect"
    # praefect['failover_enabled'] = false
    # praefect['failover_election_strategy'] = 'sql'
    # praefect['auth_token'] = ""
    # praefect['auth_transitioning'] = false
    # praefect['listen_addr'] = "localhost:2305"
    # praefect['tls_listen_addr'] = "localhost:3305"
    # praefect['certificate_path'] = "/var/opt/gitlab/prafect/certificate.pem"
    # praefect['key_path'] = "/var/opt/gitlab/prafect/key.pem"
    # praefect['prometheus_listen_addr'] = "localhost:9652"
    # praefect['prometheus_grpc_latency_buckets'] = "[0.001, 0.005, 0.025, 0.1, 0.5, 1.0, 10.0, 30.0, 60.0, 300.0, 1500.0]"
    # praefect['logging_level'] = "warn"
    # praefect['logging_format'] = "json"
    # praefect['virtual_storages'] = {
    #   'default' => {
    #     'default_replication_factor' => 3,
    #     'nodes' => {
    #       'praefect-internal-0' => {
    #         'address' => 'tcp://10.23.56.78:8075',
    #         'token' => 'abc123'
    #       },
    #       'praefect-internal-1' => {
    #         'address' => 'tcp://10.76.23.31:8075',
    #         'token' => 'xyz456'
    #       }
    #     }
    #   },
    #   'alternative' => {
    #     'nodes' => {
    #       'praefect-internal-2' => {
    #         'address' => 'tcp://10.34.1.16:8075',
    #         'token' => 'abc321'
    #       },
    #       'praefect-internal-3' => {
    #         'address' => 'tcp://10.23.18.6:8075',
    #         'token' => 'xyz890'
    #       }
    #     }
    #   }
    # }
    # praefect['sentry_dsn'] = "https://<key>:<secret>@sentry.io/<project>"
    # praefect['sentry_environment'] = "production"
    # praefect['auto_migrate'] = true
    # praefect['database_host'] = 'postgres.external'
    # praefect['database_port'] = 6432
    # praefect['database_user'] = 'praefect'
    # praefect['database_password'] = 'secret'
    # praefect['database_dbname'] = 'praefect_production'
    # praefect['database_sslmode'] = 'disable'
    # praefect['database_sslcert'] = '/path/to/client-cert'
    # praefect['database_sslkey'] = '/path/to/client-key'
    # praefect['database_sslrootcert'] = '/path/to/rootcert'
    # praefect['reconciliation_scheduling_interval'] = '5m'
    # praefect['reconciliation_histogram_buckets'] = '[0.001, 0.005, 0.025, 0.1, 0.5, 1.0, 10.0]'
    # praefect['database_host_no_proxy'] = 'postgres.internal'
    # praefect['database_port_no_proxy'] = 5432

    ################################################################################
    # Storage check
    ################################################################################
    # storage_check['enable'] = false
    # storage_check['target'] = 'unix:///var/opt/gitlab/gitlab-rails/sockets/gitlab.socket'
    # storage_check['log_directory'] = '/var/log/gitlab/storage-check'

    ################################################################################
    # Let's Encrypt integration
    ################################################################################
    letsencrypt['enable'] = false
    # letsencrypt['contact_emails'] = [] # This should be an array of email addresses to add as contacts
    # letsencrypt['group'] = 'root'
    # letsencrypt['key_size'] = 2048
    # letsencrypt['owner'] = 'root'
    # letsencrypt['wwwroot'] = '/var/opt/gitlab/nginx/www'
    # See http://docs.gitlab.com/omnibus/settings/ssl.html#automatic-renewal for more on these sesttings
    # letsencrypt['auto_renew'] = true
    # letsencrypt['auto_renew_hour'] = 0
    # letsencrypt['auto_renew_minute'] = nil # Should be a number or cron expression, if specified.
    # letsencrypt['auto_renew_day_of_month'] = "*/4"
    # letsencrypt['auto_renew_log_directory'] = '/var/log/gitlab/lets-encrypt'

    ##! Turn off automatic init system detection. To skip init detection in
    ##! non-docker containers. Recommended not to change.
    # package['detect_init'] = true

    ##! Attempt to modify kernel paramaters. To skip this in containers where the
    ##! relevant file system is read-only, set the value to false.
    # package['modify_kernel_parameters'] = true

    ##! Specify maximum number of tasks that can be created by the systemd unit
    ##! Will be populated as TasksMax value to the unit file if user is on a systemd
    ##! version that supports it (>= 227). Will be a no-op if user is not on systemd.
    # package['systemd_tasks_max'] = 4915

    ##! Settings to configure order of GitLab's systemd unit.
    ##! Note: We do not recommend changing these values unless absolutely necessary
    # package['systemd_after'] = 'multi-user.target'
    # package['systemd_wanted_by'] = 'multi-user.target'
    ################################################################################
    ################################################################################
    ##                  Configuration Settings for GitLab EE only                 ##
    ################################################################################
    ################################################################################


    ################################################################################
    ## Auxiliary cron jobs applicable to GitLab EE only
    ################################################################################
    #
    # gitlab_rails['geo_file_download_dispatch_worker_cron'] = "*/10 * * * *"
    # gitlab_rails['geo_repository_sync_worker_cron'] = "*/5 * * * *"
    # gitlab_rails['geo_secondary_registry_consistency_worker'] = "* * * * *"
    # gitlab_rails['geo_secondary_usage_data_cron_worker'] = "0 0 * * 0"
    # gitlab_rails['geo_prune_event_log_worker_cron'] = "*/5 * * * *"
    # gitlab_rails['geo_repository_verification_primary_batch_worker_cron'] = "*/5 * * * *"
    # gitlab_rails['geo_repository_verification_secondary_scheduler_worker_cron'] = "*/5 * * * *"
    # gitlab_rails['ldap_sync_worker_cron'] = "30 1 * * *"
    # gitlab_rails['ldap_group_sync_worker_cron'] = "0 * * * *"
    # gitlab_rails['historical_data_worker_cron'] = "0 12 * * *"
    # gitlab_rails['pseudonymizer_worker_cron'] = "0 23 * * *"
    # gitlab_rails['elastic_index_bulk_cron'] = "*/1 * * * *"
    # gitlab_rails['analytics_devops_adoption_create_all_snapshots_worker_cron'] = "0 4 * * 0"

    ################################################################################
    ## Kerberos (EE Only)
    ##! Docs: https://docs.gitlab.com/ee/integration/kerberos.html#http-git-access
    ################################################################################

    # gitlab_rails['kerberos_enabled'] = true
    # gitlab_rails['kerberos_keytab'] = /etc/http.keytab
    # gitlab_rails['kerberos_service_principal_name'] = HTTP/gitlab.example.com@EXAMPLE.COM
    # gitlab_rails['kerberos_simple_ldap_linking_allowed_realms'] = ['example.com','kerberos.example.com']
    # gitlab_rails['kerberos_use_dedicated_port'] = true
    # gitlab_rails['kerberos_port'] = 8443
    # gitlab_rails['kerberos_https'] = true

    ################################################################################
    ## Package repository
    ##! Docs: https://docs.gitlab.com/ee/administration/packages/
    ################################################################################

    # gitlab_rails['packages_enabled'] = true
    # gitlab_rails['packages_storage_path'] = "/var/opt/gitlab/gitlab-rails/shared/packages"
    # gitlab_rails['packages_object_store_enabled'] = false
    # gitlab_rails['packages_object_store_direct_upload'] = false
    # gitlab_rails['packages_object_store_background_upload'] = true
    # gitlab_rails['packages_object_store_proxy_download'] = false
    # gitlab_rails['packages_object_store_remote_directory'] = "packages"
    # gitlab_rails['packages_object_store_connection'] = {
    #   'provider' => 'AWS',
    #   'region' => 'eu-west-1',
    #   'aws_access_key_id' => 'AWS_ACCESS_KEY_ID',
    #   'aws_secret_access_key' => 'AWS_SECRET_ACCESS_KEY',
    #   # # The below options configure an S3 compatible host instead of AWS
    #   # 'host' => 's3.amazonaws.com',
    #   # 'aws_signature_version' => 4, # For creation of signed URLs. Set to 2 if provider does not support v4.
    #   # 'endpoint' => 'https://s3.amazonaws.com', # default: nil - Useful for S3 compliant services such as DigitalOcean Spaces
    #   # 'path_style' => false # Use 'host/bucket_name/object' instead of 'bucket_name.host/object'
    # }

    ################################################################################
    ## Dependency proxy
    ##! Docs: https://docs.gitlab.com/ee/administration/packages/dependency_proxy.html
    ################################################################################

    # gitlab_rails['dependency_proxy_enabled'] = true
    # gitlab_rails['dependency_proxy_storage_path'] = "/var/opt/gitlab/gitlab-rails/shared/dependency_proxy"
    # gitlab_rails['dependency_proxy_object_store_enabled'] = false
    # gitlab_rails['dependency_proxy_object_store_direct_upload'] = false
    # gitlab_rails['dependency_proxy_object_store_background_upload'] = true
    # gitlab_rails['dependency_proxy_object_store_proxy_download'] = false
    # gitlab_rails['dependency_proxy_object_store_remote_directory'] = "dependency_proxy"
    # gitlab_rails['dependency_proxy_object_store_connection'] = {
    #   'provider' => 'AWS',
    #   'region' => 'eu-west-1',
    #   'aws_access_key_id' => 'AWS_ACCESS_KEY_ID',
    #   'aws_secret_access_key' => 'AWS_SECRET_ACCESS_KEY',
    #   # # The below options configure an S3 compatible host instead of AWS
    #   # 'host' => 's3.amazonaws.com',
    #   # 'aws_signature_version' => 4, # For creation of signed URLs. Set to 2 if provider does not support v4.
    #   # 'endpoint' => 'https://s3.amazonaws.com', # default: nil - Useful for S3 compliant services such as DigitalOcean Spaces
    #   # 'path_style' => false # Use 'host/bucket_name/object' instead of 'bucket_name.host/object'
    # }

    ################################################################################
    ## GitLab Sentinel (EE Only)
    ##! Docs: http://docs.gitlab.com/ce/administration/high_availability/redis.html#high-availability-with-sentinel
    ################################################################################

    ##! **Make sure you configured all redis['master_*'] keys above before
    ##!   continuing.**

    ##! To enable Sentinel and disable all other services in this machine,
    ##! uncomment the line below (if you've enabled Redis role, it will keep it).
    ##! Docs: https://docs.gitlab.com/ee/administration/high_availability/redis.html
    # redis_sentinel_role['enable'] = true

    # sentinel['enable'] = true

    ##! Bind to all interfaces, uncomment to specify an IP and bind to a single one
    # sentinel['bind'] = '0.0.0.0'

    ##! Uncomment to change default port
    # sentinel['port'] = 26379

    #### Support to run sentinels in a Docker or NAT environment
    #####! Docs: https://redis.io/topics/sentinel#sentinel-docker-nat-and-possible-issues
    # In an standard case, Sentinel will run in the same network service as Redis, so the same IP will be announce for Redis and Sentinel
    # Only define these values if it is needed to announce for Sentinel a differen IP service than Redis
    # sentinel['announce_ip'] = nil # If not defined, its value will be taken from redis['announce_ip'] or nil if not present
    # sentinel['announce_port'] = nil # If not defined, its value will be taken from sentinel['port'] or nil if redis['announce_ip'] not present

    ##! Quorum must reflect the amount of voting sentinels it take to start a
    ##! failover.
    ##! **Value must NOT be greater then the amount of sentinels.**
    ##! The quorum can be used to tune Sentinel in two ways:
    ##! 1. If a the quorum is set to a value smaller than the majority of Sentinels
    ##!    we deploy, we are basically making Sentinel more sensible to master
    ##!    failures, triggering a failover as soon as even just a minority of
    ##!    Sentinels is no longer able to talk with the master.
    ##! 2. If a quorum is set to a value greater than the majority of Sentinels, we
    ##!    are making Sentinel able to failover only when there are a very large
    ##!    number (larger than majority) of well connected Sentinels which agree
    ##!    about the master being down.
    # sentinel['quorum'] = 1

    ### Consider unresponsive server down after x amount of ms.
    # sentinel['down_after_milliseconds'] = 10000

    ### Specifies the failover timeout in milliseconds.
    ##! It is used in many ways:
    ##!
    ##! - The time needed to re-start a failover after a previous failover was
    ##!   already tried against the same master by a given Sentinel, is two
    ##!   times the failover timeout.
    ##!
    ##! - The time needed for a replica replicating to a wrong master according
    ##!   to a Sentinel current configuration, to be forced to replicate
    ##!   with the right master, is exactly the failover timeout (counting since
    ##!   the moment a Sentinel detected the misconfiguration).
    ##!
    ##! - The time needed to cancel a failover that is already in progress but
    ##!   did not produced any configuration change (REPLICAOF NO ONE yet not
    ##!   acknowledged by the promoted replica).
    ##!
    ##! - The maximum time a failover in progress waits for all the replicas to be
    ##!   reconfigured as replicas of the new master. However even after this time
    ##!   the replicas will be reconfigured by the Sentinels anyway, but not with
    ##!   the exact parallel-syncs progression as specified.
    # sentinel['failover_timeout'] = 60000

    ################################################################################
    ## Additional Database Settings (EE only)
    ##! Docs: https://docs.gitlab.com/ee/administration/database_load_balancing.html
    ################################################################################
    # gitlab_rails['db_load_balancing'] = { 'hosts' => ['secondary1.example.com'] }

    ################################################################################
    ## GitLab Geo
    ##! Docs: https://docs.gitlab.com/ee/gitlab-geo
    ################################################################################
    ##! Geo roles 'geo_primary_role' and 'geo_secondary_role' are set above with
    ##! other roles. For more information, see: https://docs.gitlab.com/omnibus/roles/README.html#roles.

    # This is an optional identifier which Geo nodes can use to identify themselves.
    # For example, if external_url is the same for two secondaries, you must specify
    # a unique Geo node name for those secondaries.
    #
    # If it is blank, it defaults to external_url.
    # gitlab_rails['geo_node_name'] = nil

    # gitlab_rails['geo_registry_replication_enabled'] = true
    # gitlab_rails['geo_registry_replication_primary_api_url'] = 'https://example.com:5050'


    ################################################################################
    ## GitLab Geo Secondary (EE only)
    ################################################################################
    # geo_secondary['auto_migrate'] = true
    # geo_secondary['db_adapter'] = "postgresql"
    # geo_secondary['db_encoding'] = "unicode"
    # geo_secondary['db_collation'] = nil
    # geo_secondary['db_database'] = "gitlabhq_geo_production"
    # geo_secondary['db_username'] = "gitlab_geo"
    # geo_secondary['db_password'] = nil
    # geo_secondary['db_host'] = "/var/opt/gitlab/geo-postgresql"
    # geo_secondary['db_port'] = 5431
    # geo_secondary['db_socket'] = nil
    # geo_secondary['db_sslmode'] = nil
    # geo_secondary['db_sslcompression'] = 0
    # geo_secondary['db_sslrootcert'] = nil
    # geo_secondary['db_sslca'] = nil

    ################################################################################
    ## GitLab Geo Secondary Tracking Database (EE only)
    ################################################################################

    # geo_postgresql['enable'] = false
    # geo_postgresql['ha'] = false
    # geo_postgresql['dir'] = '/var/opt/gitlab/geo-postgresql'
    # geo_postgresql['data_dir'] = '/var/opt/gitlab/geo-postgresql/data'
    # geo_postgresql['pgbouncer_user'] = nil
    # geo_postgresql['pgbouncer_user_password'] = nil
    ##! `SQL_USER_PASSWORD_HASH` can be generated using the command `gitlab-ctl pg-password-md5 gitlab`
    # geo_postgresql['sql_user_password'] = 'SQL_USER_PASSWORD_HASH'

    ################################################################################
    ## Unleash
    ##! These settings are for GitLab internal use.
    ##! They are used to control feature flags during GitLab development.
    ##! Docs: https://docs.gitlab.com/ee/development/feature_flags
    ################################################################################
    # gitlab_rails['feature_flags_unleash_enabled'] = false
    # gitlab_rails['feature_flags_unleash_url'] = nil
    # gitlab_rails['feature_flags_unleash_app_name'] = nil
    # gitlab_rails['feature_flags_unleash_instance_id'] = nil

    ################################################################################
    # Pgbouncer (EE only)
    # See [GitLab PgBouncer documentation](http://docs.gitlab.com/omnibus/settings/database.html#enabling-pgbouncer-ee-only)
    # See the [PgBouncer page](https://pgbouncer.github.io/config.html) for details
    ################################################################################
    # pgbouncer['enable'] = false
    # pgbouncer['log_directory'] = '/var/log/gitlab/pgbouncer'
    # pgbouncer['data_directory'] = '/var/opt/gitlab/pgbouncer'
    # pgbouncer['env_directory'] = '/opt/gitlab/etc/pgbouncer/env'
    # pgbouncer['env'] = {
    #   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
    # }
    # pgbouncer['listen_addr'] = '0.0.0.0'
    # pgbouncer['listen_port'] = '6432'
    # pgbouncer['pool_mode'] = 'transaction'
    # pgbouncer['server_reset_query'] = 'DISCARD ALL'
    # pgbouncer['application_name_add_host'] = '1'
    # pgbouncer['max_client_conn'] = '2048'
    # pgbouncer['default_pool_size'] = '100'
    # pgbouncer['min_pool_size'] = '0'
    # pgbouncer['reserve_pool_size'] = '5'
    # pgbouncer['reserve_pool_timeout'] = '5.0'
    # pgbouncer['server_round_robin'] = '0'
    # pgbouncer['log_connections'] = '0'
    # pgbouncer['server_idle_timeout'] = '30'
    # pgbouncer['dns_max_ttl'] = '15.0'
    # pgbouncer['dns_zone_check_period'] = '0'
    # pgbouncer['dns_nxdomain_ttl'] = '15.0'
    # pgbouncer['admin_users'] = %w(gitlab-psql postgres pgbouncer)
    # pgbouncer['stats_users'] = %w(gitlab-psql postgres pgbouncer)
    # pgbouncer['ignore_startup_parameters'] = 'extra_float_digits'
    # pgbouncer['databases'] = {
    #   DATABASE_NAME: {
    #     host: HOSTNAME,
    #     port: PORT
    #     user: USERNAME,
    #     password: PASSWORD
    ###! generate this with `echo -n '$password + $username' | md5sum`
    #   }
    #   ...
    # }
    # pgbouncer['logfile'] = nil
    # pgbouncer['unix_socket_dir'] = nil
    # pgbouncer['unix_socket_mode'] = '0777'
    # pgbouncer['unix_socket_group'] = nil
    # pgbouncer['auth_type'] = 'md5'
    # pgbouncer['auth_hba_file'] = nil
    # pgbouncer['auth_query'] = 'SELECT username, password FROM public.pg_shadow_lookup($1)'
    # pgbouncer['users'] = {
    #   {
    #     name: USERNAME,
    #     password: MD5_PASSWORD_HASH
    #   }
    # }
    # postgresql['pgbouncer_user'] = nil
    # postgresql['pgbouncer_user_password'] = nil
    # pgbouncer['server_reset_query_always'] = 0
    # pgbouncer['server_check_query'] = 'select 1'
    # pgbouncer['server_check_delay'] = 30
    # pgbouncer['max_db_connections'] = nil
    # pgbouncer['max_user_connections'] = nil
    # pgbouncer['syslog'] = 0
    # pgbouncer['syslog_facility'] = 'daemon'
    # pgbouncer['syslog_ident'] = 'pgbouncer'
    # pgbouncer['log_disconnections'] = 1
    # pgbouncer['log_pooler_errors'] = 1
    # pgbouncer['stats_period'] = 60
    # pgbouncer['verbose'] = 0
    # pgbouncer['server_lifetime'] = 3600
    # pgbouncer['server_connect_timeout'] = 15
    # pgbouncer['server_login_retry'] = 15
    # pgbouncer['query_timeout'] = 0
    # pgbouncer['query_wait_timeout'] = 120
    # pgbouncer['client_idle_timeout'] = 0
    # pgbouncer['client_login_timeout'] = 60
    # pgbouncer['autodb_idle_timeout'] = 3600
    # pgbouncer['suspend_timeout'] = 10
    # pgbouncer['idle_transaction_timeout'] = 0
    # pgbouncer['pkt_buf'] = 4096
    # pgbouncer['listen_backlog'] = 128
    # pgbouncer['sbuf_loopcnt'] = 5
    # pgbouncer['max_packet_size'] = 2147483647
    # pgbouncer['tcp_defer_accept'] = 0
    # pgbouncer['tcp_socket_buffer'] = 0
    # pgbouncer['tcp_keepalive'] = 1
    # pgbouncer['tcp_keepcnt'] = 0
    # pgbouncer['tcp_keepidle'] = 0
    # pgbouncer['tcp_keepintvl'] = 0
    # pgbouncer['disable_pqexec'] = 0

    ## Pgbouncer client TLS options
    # pgbouncer['client_tls_sslmode'] = 'disable'
    # pgbouncer['client_tls_ca_file'] = nil
    # pgbouncer['client_tls_key_file'] = nil
    # pgbouncer['client_tls_cert_file'] = nil
    # pgbouncer['client_tls_protocols'] = 'all'
    # pgbouncer['client_tls_dheparams'] = 'auto'
    # pgbouncer['client_tls_ecdhcurve'] = 'auto'
    #
    ## Pgbouncer server  TLS options
    # pgbouncer['server_tls_sslmode'] = 'disable'
    # pgbouncer['server_tls_ca_file'] = nil
    # pgbouncer['server_tls_key_file'] = nil
    # pgbouncer['server_tls_cert_file'] = nil
    # pgbouncer['server_tls_protocols'] = 'all'
    # pgbouncer['server_tls_ciphers'] = 'fast'

    ################################################################################
    # Repmgr (EE only)
    ################################################################################
    # repmgr['enable'] = false
    # repmgr['cluster'] = 'gitlab_cluster'
    # repmgr['database'] = 'gitlab_repmgr'
    # repmgr['host'] = nil
    # repmgr['node_number'] = nil
    # repmgr['port'] = 5432
    # repmgr['trust_auth_cidr_addresses'] = []
    # repmgr['username'] = 'gitlab_repmgr'
    # repmgr['sslmode'] = 'prefer'
    # repmgr['sslcompression'] = 0
    # repmgr['failover'] = 'automatic'
    # repmgr['log_directory'] = '/var/log/gitlab/repmgrd'
    # repmgr['node_name'] = nil
    # repmgr['pg_bindir'] = '/opt/gitlab/embedded/bin'
    # repmgr['service_start_command'] = '/opt/gitlab/bin/gitlab-ctl start postgresql'
    # repmgr['service_stop_command'] = '/opt/gitlab/bin/gitlab-ctl stop postgresql'
    # repmgr['service_reload_command'] = '/opt/gitlab/bin/gitlab-ctl hup postgresql'
    # repmgr['service_restart_command'] = '/opt/gitlab/bin/gitlab-ctl restart postgresql'
    # repmgr['service_promote_command'] = nil
    # repmgr['promote_command'] = '/opt/gitlab/embedded/bin/repmgr standby promote -f /var/opt/gitlab/postgresql/repmgr.conf'
    # repmgr['follow_command'] = '/opt/gitlab/embedded/bin/repmgr standby follow -f /var/opt/gitlab/postgresql/repmgr.conf'

    # repmgr['upstream_node'] = nil
    # repmgr['use_replication_slots'] = false
    # repmgr['loglevel'] = 'INFO'
    # repmgr['logfacility'] = 'STDERR'
    # repmgr['logfile'] = nil

    # repmgr['event_notification_command'] = nil
    # repmgr['event_notifications'] = nil

    # repmgr['rsync_options'] = nil
    # repmgr['ssh_options'] = nil
    # repmgr['priority'] = nil
    #
    # HA setting to specify if a node should attempt to be master on initialization
    # repmgr['master_on_initialization'] = true

    # repmgr['retry_promote_interval_secs'] = 300
    # repmgr['witness_repl_nodes_sync_interval_secs'] = 15
    # repmgr['reconnect_attempts'] = 6
    # repmgr['reconnect_interval'] = 10
    # repmgr['monitor_interval_secs'] = 2
    # repmgr['master_response_timeout'] = 60
    # repmgr['daemon'] = true
    # repmgrd['enable'] = true

    ################################################################################
    # Patroni (EE only)
    #
    # NOTICE: Patroni is an experimental feature and subject to change.
    #
    ################################################################################
    # patroni['enable'] = false

    # patroni['dir'] = '/var/opt/gitlab/patroni'
    # patroni['data_dir'] = '/var/opt/gitlab/patroni/data'
    # patroni['ctl_command'] = '/opt/gitlab/embedded/bin/patronictl'

    ## Patroni dynamic configuration settings
    # patroni['loop_wait'] = 10
    # patroni['ttl'] = 30
    # patroni['retry_timeout'] = 10
    # patroni['maximum_lag_on_failover'] = 1_048_576
    # patroni['max_timelines_history'] = 0
    # patroni['master_start_timeout'] = 300
    # patroni['use_pg_rewind'] = true
    # patroni['remove_data_directory_on_rewind_failure'] = false
    # patroni['remove_data_directory_on_diverged_timelines'] = false
    # patroni['use_slots'] = true
    # patroni['replication_password'] = nil
    # patroni['replication_slots'] = {}

    ## Standby cluster replication settings
    # patroni['standby_cluster']['enable'] = false
    # patroni['standby_cluster']['host'] = nil
    # patroni['standby_cluster']['port'] = 5432
    # patroni['standby_cluster']['primary_slot_name'] = nil

    ## Global/Universal settings
    # patroni['scope'] = 'gitlab-postgresql-ha'
    # patroni['name'] = nil

    ## Log settings
    # patroni['log_directory'] = '/var/log/gitlab/patroni'
    # patroni['log_level'] = 'INFO'

    ## Consul specific settings
    # patroni['consul']['url'] = 'http://127.0.0.1:8500'
    # patroni['consul']['service_check_interval'] = '10s'
    # patroni['consul']['register_service'] = true
    # patroni['consul']['checks'] = []

    ## PostgreSQL configuration override
    # patroni['postgresql']['hot_standby'] = 'on'

    ## The following must hold the same values on all nodes.
    ## Leave unassined to use PostgreSQL's default values.
    # patroni['postgresql']['wal_level'] = 'replica'
    # patroni['postgresql']['wal_log_hints'] = 'on'
    # patroni['postgresql']['max_worker_processes'] = 8
    # patroni['postgresql']['max_locks_per_transaction'] = 64
    # patroni['postgresql']['max_connections'] = 200
    # patroni['postgresql']['checkpoint_timeout'] = 30

    ## The following can hold different values on all nodes.
    ## Leave unassined to use PostgreSQL's default values.
    # patroni['postgresql']['wal_keep_segments'] = 8
    # patroni['postgresql']['max_wal_senders'] = 5
    # patroni['postgresql']['max_replication_slots'] = 5

    ## Permanent replication slots for Streaming Replication
    # patroni['replication_slots'] = {
    #   'geo_secondary' => { 'type' => 'physical' }
    # }

    ## The address and port that Patroni API binds to and listens on.
    # patroni['listen_address'] = nil
    # patroni['port'] = '8008'

    ## The address of the Patroni node that is advertized to other cluster
    ## members to communicate with its API and PostgreSQL. If it is not specified,
    ## it tries to use the first available private IP and falls back to the default
    ## network interface.
    # patroni['connect_address'] = nil

    ## The port that Patroni API responds to other cluster members. This port is
    ## advertized and by default is the same as patroni['port'].
    # patroni['connect_port'] = '8008'


    ################################################################################
    # Consul (EEP only)
    ################################################################################
    # consul['enable'] = false
    # consul['dir'] = '/var/opt/gitlab/consul'
    # consul['username'] = 'gitlab-consul'
    # consul['group'] = 'gitlab-consul'
    # consul['config_file'] = '/var/opt/gitlab/consul/config.json'
    # consul['config_dir'] = '/var/opt/gitlab/consul/config.d'
    # consul['data_dir'] = '/var/opt/gitlab/consul/data'
    # consul['log_directory'] = '/var/log/gitlab/consul'
    # consul['env_directory'] = '/opt/gitlab/etc/consul/env'
    # consul['env'] = {
    #   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
    # }
    # consul['monitoring_service_discovery'] = false
    # consul['node_name'] = nil
    # consul['script_directory'] = '/var/opt/gitlab/consul/scripts'
    # consul['configuration'] = {
    #   'client_addr' => nil,
    #   'datacenter' => 'gitlab_consul',
    #   'enable_script_checks' => true,
    #   'server' => false
    # }
    # consul['services'] = []
    # consul['service_config'] = {
    #   'postgresql' => {
    #     'service' => {
    #       'name' => "postgresql",
    #       'address' => '',
    #       'port' => 5432,
    #       'checks' => [
    #         {
    #           'script' => "/var/opt/gitlab/consul/scripts/check_postgresql",
    #           'interval' => "10s"
    #         }
    #       ]
    #     }
    #   }
    # }
    # consul['watchers'] = {
    #   'postgresql' => {
    #     enable: false,
    #     handler: 'failover_pgbouncer'
    #   }
    # }
    ################################################################################
    # Service desk email settings (EEP only)
    ################################################################################
    ### Service desk email
    ###! Allow users to create new service desk issues by sending an email to
    ###! service desk address.
    ###! Docs: https://docs.gitlab.com/ee/administration/reply_by_email.html
    # gitlab_rails['service_desk_email_enabled'] = false

    #### Service Desk Mailbox Settings (via `mail_room`)
    #### Service Desk Email Address
    ####! The email address including the `%{key}` placeholder that will be replaced
    ####! to reference the item being replied to.
    ####! **The placeholder can be omitted but if present, it must appear in the
    ####!   "user" part of the address (before the `@`).**
    # gitlab_rails['service_desk_email_address'] = "contact_project+%{key}@gmail.com"

    #### Service Desk Email account username
    ####! **With third party providers, this is usually the full email address.**
    ####! **With self-hosted email servers, this is usually the user part of the
    ####!   email address.**
    # gitlab_rails['service_desk_email_email'] = "contact_project@gmail.com"

    #### Service Desk Email account password
    # gitlab_rails['service_desk_email_password'] = "[REDACTED]"

    ####! The mailbox where service desk mail will end up. Usually "inbox".
    # gitlab_rails['service_desk_email_mailbox_name'] = "inbox"
    ####! The IDLE command timeout.
    # gitlab_rails['service_desk_email_idle_timeout'] = 60
    ####! The file name for internal `mail_room` JSON logfile
    # gitlab_rails['service_desk_email_log_file'] = "/var/log/gitlab/mailroom/mail_room_json.log"

    #### Service Desk IMAP Settings
    # gitlab_rails['service_desk_email_host'] = "imap.gmail.com"
    # gitlab_rails['service_desk_email_port'] = 993
    # gitlab_rails['service_desk_email_ssl'] = true
    # gitlab_rails['service_desk_email_start_tls'] = false

    gitlab_shell['secret_token'] = '8e0e8fb5d101b186d291819af6313a4414d43d955865505673aa52ff207657685508ecc8d0887b9096a9025676b0eadea71708dd385440072a244408ba9da804'
  gitlab-secrets.json: |
    {
      "gitlab_workhorse": {
        "secret_token": "+FyDBTa3VZtD/yKqy/Vuyte3YFM6GlPlVixeo4dlpEg="
      },
      "gitlab_shell": {
        "secret_token": "8e0e8fb5d101b186d291819af6313a4414d43d955865505673aa52ff207657685508ecc8d0887b9096a9025676b0eadea71708dd385440072a244408ba9da804"
      },
      "gitlab_rails": {
        "secret_key_base": "a035d69857de8f6c03a370504ad91c3f1f8761c451cfe30cf039c93d9bca13c35184e1e88c8f250293da394d4c38bd4e78231dcce3f4ee1f61ed5dc02d0e625a",
        "db_key_base": "632ae966d0b6060b95703dff5d3802d318cfef8246389570fdfba73cd6e8070dfb421caede073bc664e4488ea040232254562b265eb74565dbd9e461018c225b",
        "otp_key_base": "5c0387f7f328e53c1391b4d7dc9cb095010e2e12daca56311ea13dd26cc84b3734f74d46c4bdbaf0ec5d2947695a35714b6bed4c8d87e7b68ac6a1a2f6ba8b80",
        "encrypted_settings_key_base": "3ec05d0615344b5080cef54534440c38e8b15875223ece4ccf6935dd7ffdc48c9fae068deee39bc82cbb074772914b554f7ea5578a432a579e55e3a0b5b2186f",
        "openid_connect_signing_key": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
        "ci_jwt_signing_key": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n"
      },
      "gitlab_pages": {
        "gitlab_secret": "testtesttest",
        "gitlab_id": null,
        "auth_secret": "testtesttest",
        "api_secret_key": "CzZyG/VgDR0hUGhqMPEcNLMbSsuCfXzwbrSoa+9kYQM="
      },
      "gitlab_kas": {
        "api_secret_key": "ODFhODg4Njk3NTQxYzY1NGRmODc5ZjU4YWIxOTdhMDI="
      },
      "grafana": {
        "secret_key": "29f27633e0bf5ba8ba9192ef415e7123",
        "gitlab_secret": null,
        "gitlab_application_id": null,
        "admin_password": "0d84807a740234fd56e3d3b5af11b3a3",
        "metrics_basic_auth_password": null
      },
      "registry": {
        "http_secret": "ccbb77bbecd41fb8f7f2669855f75c32277acbfe37264aa4670cb14cf10fa4043fbff020003305112c6f457539ae1234897e872e94500fdffb00830b3aab3b8e",
        "internal_certificate": "-----BEGIN CERTIFICATE-----\nMIIFBTCCAu2gAwIBAgIBADANBgkqhkiG9w0BAQsFADBGMQwwCgYDVQQGEwNVU0Ex\nDzANBgNVBAoMBkdpdExhYjESMBAGA1UECwwJQ29udGFpbmVyMREwDwYDVQQDDAhS\nZWdpc3RyeTAeFw0yMTA1MTAxODAxMzdaFw0zMTA1MDgxODAxMzdaMEYxDDAKBgNV\nBAYTA1VTQTEPMA0GA1UECgwGR2l0TGFiMRIwEAYDVQQLDAlDb250YWluZXIxETAP\nBgNVBAMMCFJlZ2lzdHJ5MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\n3UL4K2Ev+DkvVn2dZJvawlBLg9zsV8vhKkbw8O52MD+HYP1Uu9afLEVE1jcfojqT\np8+XZCfnVZ2trMegwLwjQKI+O4L8yHNqYZ9/iCVyuvqLM7uXgN0uJGJl0OnxqVRA\nBPvb0nVX1ZhyxUAVVEorPWCQnptenw/rKTl7f6O1ViTvnOqTSFlclyJ0jEth8Ak9\nsAZ82tgP4rUQUpydT4KwUkk9gfHTgbymDQ1JGpeMZVLdTha9H1b1Vo3o08q3ixpP\n50/4mDYsyNfFvXXxaC+u2mKr5VpOzgLLUFZu15TQdeE3bznIcJXxKffQIcFQsHXP\n9YQIqVqo5dqptmxN227ej0DJCLupXs8DMr5hPbQ1AgBMO9Ohue9RiA9fS9QHYfyH\nwSBLTON2W7dkaOyBlGYYrdrlopRZ/8E8JcxA4izToXLye9w++VTFR+A2DlgWCaDF\n9I+ZL4XnyokV9dX3y6L85a/4jB9Z4ivm4EeP4eB6vPh8Tk6ZnQHmV8Ije79jmCCy\nFeZP62nOaRCL4+XY73r3cEADUQ/p2/zQAvwgIrm5p21iR6Ueu1RmZ9mv6vnSjqjE\nWoYrjAvCHXRpEWq1Fg3eT0LSPP7Nsaje0nguuo3Qkzj8brUzdlfoXgfFlWeUFDta\n/SXz58VDCU8lslUYURun1g9K6gSC+2k8aKDX/h4mcZUCAwEAATANBgkqhkiG9w0B\nAQsFAAOCAgEAy6Hjrffp4ESlC+rfeiYTkS+bFE+gpGjy2s8sLQ84hgKbc6ta2Acp\npb+JEpILdnXq1RbauaH0lm33kInEjFrkgL7sPk4Tv2PXrOHgQ99ZmvPBk1N0uCMk\nai+Ab+y5kvJQrGAtSVha8jn7hztGu3mbDvSCAkfoVRIQNbm5nAZPFE3v7aSpuVUk\n468Rp+r6SdY2yeUH/Ha27T6jZI4nM71XT5ZluV7jFEhzQI4HFlgYRflE4pfejBpS\nBkdaSKBuornIlEbTIYbOpP/rLG0GSQjIcc61OtZbkx2AtmjZjgSLwB2DvGhEEaT5\nszcwFiTQA5/dVg/V3zjTyrUmKUTU45vLb5sbHrCr4p8NmKwA36e6qmIpVeAsiwpw\nBkAqYTjDv0Zaa8orVSCEfg/oMuIrFbK4aOU3RqUyd8CyzN3s7UpK1RUOvub7+fuo\njS3CD7OI1QnqxI8hxtdVFMzlBJNdgZXgXqXaEIpBL3URatSoVElgE9yL87+a9q3F\nsLsgBmqbg6gVE5wlfciK81YsSz3YQ0GDMFwy2ot58ro+tam3cVZDfutDjAABQXkb\ncgqIwIEVkhRjZhFX78PaCM5bPhk28vlrwTJWlWrmGgVhkI0kiTEJ/1gsoSO6KEr3\n826tBPjNfsMvQkYKCbSom9UMu4ogqwaEk9gyTw1ECRW9XYHA54OHN6c=\n-----END CERTIFICATE-----\n",
        "internal_key": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n"
      },
      "letsencrypt": {
        "auto_enabled": null
      },
      "mattermost": {
        "email_invite_salt": "8ea3371eb1db83f65ccb49a63425ab74",
        "file_public_link_salt": "c985b83ae3e1f74ebbb5c4b781e8101d",
        "sql_at_rest_encrypt_key": "d7ec48e58c1c3f9aca1957172d65c8e4"
      },
      "postgresql": {
        "internal_certificate": "-----BEGIN CERTIFICATE-----\nMIIFBzCCAu+gAwIBAgIBADANBgkqhkiG9w0BAQsFADBHMQwwCgYDVQQGEwNVU0Ex\nDzANBgNVBAoMBkdpdExhYjERMA8GA1UECwwIRGF0YWJhc2UxEzARBgNVBAMMClBv\nc3RncmVTUUwwHhcNMjEwNTEwMTgwMTM5WhcNMzEwNTA4MTgwMTM5WjBHMQwwCgYD\nVQQGEwNVU0ExDzANBgNVBAoMBkdpdExhYjERMA8GA1UECwwIRGF0YWJhc2UxEzAR\nBgNVBAMMClBvc3RncmVTUUwwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC\nAQC/pjgWKO4d60awgXtq4/BPOlDK2lyvrJXIDAb/7XD4BI1IfiUDnmcykHwaItkF\no14kRIOBMlBGrISDyQSU+Uv9n1K6APWX9nhFQtlB8+FUH6KqSSz/Yb8GuOpXRAqr\nUrNJ5AAQsdxzKRoNdKMPawNbePyCum83NQBpyIXIGHP87frVizsnbcQvlLYzkRhN\ndbWcl4J4l1PtuG29M8dkBrJKsGcUkEk1hfu93cE/wnL4QjOv6UB9U80Xk/RuZj0g\nm0RgYZw3ORN086YJH5GXrvg6ThjvyP+bY7zvO7N08V6vL43wqWXWScFP1ERNTRGR\nXdYoHKheB+d+n3JAgmXMkHXkCGQXnKuZLdNtnWzL8lxBnrFd5H8u2eMad9CvdOwW\n+BNRK8KjoHYCu7h8uQkqnFHoCIhm1fLQjdJxGu1uJjnADzCwJFsxKwMYu9g5ccIp\nnqJuMdSHShmApM2ZeFdeYG4KvK8KANeEunMhHrd5ipCl9g6/91VQKiBJKHSvkoP/\nKERk4hx+yBFTaY7z9qp8IyzF8BV5co+EIdV+7TIhzK3cIlaedmauTkLxNdQOe6am\n6DhwS7EM9wDYsvMEqIlbVQUy5L/MUF/437ejA+7S9K79wmxxLS3aMoTXyw1SkVA3\nvZzPtaVsb7su6xkMt7YdK0gGoGIJfK5U6zJfwcaqamO/twIDAQABMA0GCSqGSIb3\nDQEBCwUAA4ICAQAU7yF7T8EXZysdavzTal+dLLUqMFY2d7RFuVG8UZx4DhKVB/3l\nsBKspDNQ3INuDiAJC7Uf7CoWg2PPbxZ3fn5Xo13W08WKiws/lzglGpjZF/Xxpg6d\nSw7i4BrVd0iL5U6mijOpFqBIPnwq+odSDmaR0sHeGMnkJd3OURA8gQZH/3ciqh29\nqkm+QtRrrDosU2+g5bT81hqzJ4qpnGtirr2obfOnUviU9a+WXSM4ymwdU14zLTa8\nL4cuot+6GQoHsCsZvQdCOMkJTM4wOqeDQi/AOtA9HzgNbr9mzZtymPp7ZdOXzKbh\ntgTOUGobIjB5SKacv3W0qXFXPBnJVT0OKJcBVbwnI5PBUH1/QuyFPgM/PDOIncNn\npmSOPYABB3cvfQSYc/3XBQWEI8YstqHPtn78fN3YOl5ro76d7TWxS8NYsznm2qMp\nwkPRmXIwdDdPBFJQzCixaLkQG+RqTo0E+ShLWX7XlaYNq8AyIt6aFCyB8fAUeGFC\nrYdrL3xZCy+zaFBW5JqGpFtY4N32SRjUEAV5xciykippfdxV36tQ7G3KVFIxVrUV\nLMPJFehRqOxhlkY4dAta5xSGhtAUlf4DmJcdCIimK0IgH5RRkQYViEHlQsovIVYX\nVb8cLEC3UZdj8Pa0Ai/zwCKC+TtxTqorMKc6dvgD0zWxRDxXt13qaZzaYg==\n-----END CERTIFICATE-----\n",
        "internal_key": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n"
      }
    }
  gitlab_pages_secret: |
    ZSwekeZkNZMjTqzBNLb3FpPjt6QQHZx6SBsn0knEXIE=
  GITLAB_SHARED_RUNNERS_REGISTRATION_TOKEN: s44Wr9gfYqivxULA_wYa
---
###### MINIO SECRETS ######
apiVersion: v1
kind: Secret
metadata:
  name: minio
  namespace: code-ua
type: kubernetes.io/basic-auth
stringData:
  username: minio-codeua-gitlab-key
  password: girs_code-ua2021
---
###### MINIO-CONSOLE SECRETS ######
apiVersion: v1
kind: Secret
metadata:
  name: minio-console-credentials
  namespace: code-ua
type: Opaque
stringData:
  passphrase: girsgitlab
  salt: saltiest_salt_EU
---
###### PAGES SECRETS ######
apiVersion: v1
kind: Secret
metadata:
  name: pages-config
  namespace: code-ua
type: Opaque
stringData:
  gitlab-pages-config: |
    pages-domain=pages.code-ua.k3s
    pages-root=/var/opt/gitlab/gitlab-rails/shared/pages
    daemon-uid=998
    daemon-gid=998
    daemon-inplace-chroot=true
    api-secret-key=/var/opt/gitlab/gitlab-pages/.gitlab_pages_secret
    listen-proxy=0.0.0.0:8090
    log-format=json
    artifacts-server=http://gitlab.code-ua/api/v4
    artifacts-server-timeout=10
    gitlab-server=http://gitlab.code-ua
  .gitlab_pages_secret: |
    CzZyG/VgDR0hUGhqMPEcNLMbSsuCfXzwbrSoa+9kYQM=
---
###### POSTGRES SECRETS ######
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: code-ua
type: Opaque
stringData:
  POSTGRESQL_USERNAME: postgres
  #POSTGRESQL_POSTGRES_PASSWORD: meercat
  POSTGRESQL_PASSWORD: meercat
  POSTGRESQL_DATABASE: codeua_production
  REPMGR_PASSWORD: repmgr_meercat
---
apiVersion: v1
kind: Secret
metadata:
  name: pgpool-credentials
  namespace: code-ua
type: Opaque
stringData:
  POSTGRESQL_USERNAME: postgres
  POSTGRESQL_ADMIN_USERNAME: postgres
  POSTGRESQL_PASSWORD: meercat
  POSTGRESQL_ADMIN_PASSWORD: meercat
---
apiVersion: v1
kind: Secret
metadata:
  name: pg-praefect-credentials
  namespace: code-ua
type: Opaque
stringData:
  POSTGRESQL_USERNAME: postgres
  POSTGRESQL_PASSWORD: meercat
  POSTGRESQL_DATABASE: praefect_production
---
###### PRAEFECT SECRETS ######
apiVersion: v1
kind: Secret
metadata:
  name: praefect-config
  namespace: code-ua
type: Opaque
stringData:
  gitlab.rb: |
    # Disable all other services on the Praefect node
    postgresql['enable'] = false
    redis['enable'] = false
    nginx['enable'] = false
    alertmanager['enable'] = false
    prometheus['enable'] = false
    grafana['enable'] = false
    puma['enable'] = false
    sidekiq['enable'] = false
    gitlab_workhorse['enable'] = false
    gitaly['enable'] = false
    prometheus_monitoring['enable'] = false

    # Enable only the Praefect service
    praefect['enable'] = true

    # Prevent database connections during 'gitlab-ctl reconfigure'
    gitlab_rails['rake_cache_clear'] = false
    gitlab_rails['auto_migrate'] = false

    praefect['listen_addr'] = '0.0.0.0:2305'

    # Enable Prometheus metrics access to Praefect. You must use firewalls
    # to restrict access to this address/port.
    praefect['prometheus_listen_addr'] = '0.0.0.0:9652'

    praefect['auth_token'] = 'PRAEFECT_EXTERNAL_TOKEN'

    praefect['database_host'] = 'postgres-praefect-0.postgres-praefect.code-ua'
    praefect['database_port'] = 5432
    praefect['database_user'] = 'postgres'
    praefect['database_password'] = 'meercat'
    praefect['database_dbname'] = 'praefect_production'
    praefect['database_host_no_proxy'] = 'postgres-praefect-0.postgres-praefect.code-ua'
    praefect['database_port_no_proxy'] = 5432

    praefect['database_sslmode'] = 'disable'

    # Name of storage hash must match storage name in git_data_dirs on GitLab
    # server ('default') and in git_data_dirs on Gitaly nodes ('gitaly-1')
    praefect['virtual_storages'] = {
      'default' => {
        'nodes' => {
          'gitaly-1' => {
            'address' => 'tcp://gitaly-0.gitaly.code-ua:8075',
            'token'   => 'PRAEFECT_INTERNAL_TOKEN',
          },
          'gitaly-2' => {
            'address' => 'tcp://gitaly-1.gitaly.code-ua:8075',
            'token'   => 'PRAEFECT_INTERNAL_TOKEN'
          },
          'gitaly-3' => {
            'address' => 'tcp://gitaly-2.gitaly.code-ua:8075',
            'token'   => 'PRAEFECT_INTERNAL_TOKEN'
          }
        }
      }
    }
---
###### REGISTRY SECRETS ######
apiVersion: v1
kind: Secret
metadata:
  name: registry-config
  namespace: code-ua
type: Opaque
stringData:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
      level: info
    http:
      debug:
        addr: ':5001'
        prometheus:
          enabled: false
          path: /metrics
      draintimeout: 0
      headers:
        X-Content-Type-Options: [nosniff]
      addr: ':5000'
      secret: "d2Y3Zzhsa3huOWdkc3d3c3N0eWQ0bnh3bTlhYTJscDh6NXFrcTNoM3ZnNWsxcDB3c3V2OTk0c2lnN2l6cDRndnhyN2N6Z3E2cDZkZWdrN3pjZDdnYm1zdDZrMHZxMjU4bzBzZmo0MHg4cjl0ZTh2b3E4b3ZwYXkxY2kydnQyZzY="
      relativeurls: false
    health:
      storagedriver:
        enabled: false
        interval: 10s
        threshold: 3
    auth:
      token:
        service: container_registry
        issuer: "gitlab-issuer"
        rootcertbundle: /etc/docker/registry/gitlab-registry.crt
        autoredirect: false
    compatibility:
      schema1:
        enabled: false
    validation:
      disabled: true
    compatibility:
      schema1:
        enabled: false
    validation:
      disabled: true
    reporting:
    profiling:
    storage:
      filesystem:
        rootdirectory: /var/lib/registry
      maintenance:
        readonly:
          enabled: false
      cache:
        blobdescriptor: 'inmemory'
      delete:
        enabled: true
      redirect:
        disable: true

    database:
      dbname: registry
      host: postgres
      port: 5432
      user: gitlab
      password: meercat
      sslmode: disable
  gitlab-registry.crt: |
    -----BEGIN CERTIFICATE-----
    MIIErDCCApQCCQDRjKNxo2NLQTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1n
    aXRsYWItaXNzdWVyMB4XDTE5MDQwMTE5MDgyNVoXDTI5MDMyOTE5MDgyNVowGDEW
    MBQGA1UEAwwNZ2l0bGFiLWlzc3VlcjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCC
    AgoCggIBAOae+kGLiMH5z8zpZ4F9P2N74zL1wRu94ze5pFOcoko+RNvtT4R6HTHi
    uvPyY2395i7VI649FascU2ESOpTw845f5FsC/hdECdvIEQtKm87qGKhGGlhf3pcf
    AV3YXiUPT/HjJv4/L6om9RaTofgr0JjlEQXUs/FM5uIDRWBJYDiRspAmKbf4yc2y
    7e0Gl/tQBhera58PDHcOHbwZH1dXKH7vfIF9jzFknlCmCYJoqX8dFn5dTZWqbA+H
    Jk48DtvjJGsQM1TXJmf/gk5rSS9GTnXreHeQ/DOPZFHkoHlslQnrGPR/pLr/tGIz
    AFhEF7okmUtM/JAYIdnXDyiKFmE43PKBhOoJUyo68oai3WaNxOBaMWYWEAWv2vg2
    JWbRzu86zmzqyhQHTfpheVR/vTioE08t+DqVzeDCAZIce45R/de1CrysQUmbk2+0
    SrExVxU7/NQBd8CzTFREv5JR475r9prsr5+GfZ9qWBEpTNZfE2oowDOL+V/cArrH
    6m5qx7vyLbsfYB3h8KpVMrI89hv9TVY3gouqr/Zl2wGDl1XC1uERuhG+9l7vOvk/
    5BoXsP38EyjUf9iwDTqXehBJkv8fiGAjY571oSD3GxU4glbx6IwgSpdtzYauHlhc
    bSBvdlZnfXGofX4HBhIuVQwYyQzRAi30RosG3Hg21oOa9GipPP3TAgMBAAEwDQYJ
    KoZIhvcNAQELBQADggIBALkKzRGBZiNs/djZ8jcG7n5cO8ei0qQoM3yOILanLBNb
    KFb6kbHemT8rtbqriMwo8msC4BJFvpivkABYN/PfIyzRJ9YADWMqgxgCdnWNRpkJ
    aM5LDYboVQeW0U7ylacVnVGMC2640kSZqQD71xEZtC+6qk2zTUkPAN2I9uXe8WJK
    VbYqVz05ieEWWMzoYIQo83mn9iZlfOJwaor+HKG0NveJxz274Tq7wsnVMbi+VZSm
    r4REt39BvaaDKSMQD4FSPpv3r7Xu+DjgfxcFtJGLMk/xSYmTJOGXHYw0um7nH/hT
    l9+rTF/7hBnDY7Yyv3cQ877ZORrK7M+0LeIn2mHLmmRq388XdJ+8LAWXeiHtFsrB
    a1eq5WpyjNDLp95RmMI+IekGKDGsdXBeZq7Setc/Z6BDIKaE++yGz9oi3WXyOa5c
    fJfD8zl+hDEFm2gnzjDOi5JKjGHcxEThZdQEfl9LvOdwUxifdAfUFK1gf2zMXTpt
    QXFWOc/yll7PRNNyg5uU70Zos00vW5CaEZDWecTGKJtJfUxc1yqKWcgH35Te7eos
    qcAY98rmtNISQvM2fNGjzuuBmOlCcZYcP4nE4O+YLvOIrWJg5ZUwHmxX4U9e5CHS
    zVRlLdoiPA30s5GvFhDx/ZU+ib+OxxwDLQLQ57aOQRgoq0GiSP3NK+Y4+AjllKzd
    -----END CERTIFICATE-----
---
###### RUNNER SECRETS ######
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-runner-credentials
  namespace: code-ua
type: Opaque
stringData:
  REGISTRATION_TOKEN: bveT9qk34Ady6PHF-cGi
---
apiVersion: v1
kind: Secret
metadata:
  name: runner-config
  namespace: code-ua
type: Opaque
stringData:
  config.toml: |
    concurrent = 2
    check_interval = 5
    log_level = "debug"
    [session_server]
      listen_address = "[::]:8093"
      session_timeout = 1800
    [[runners]]
      url = "http://gitlab.code-ua"
      name = "Shell executor runner"
      executor = "shell"
      shell = "bash"
      builds_dir = ""
      request_concurrency = 2
      [runners.cache]
        Type = "s3"
        Path = "/cache"
        Shared = true
        [runners.cache.s3]
          ServerAddress = "http://minio-sidekick.code-ua:9000"
          AccessKey = "minio-codeua-gitlab-key"
          SecretKey = "girs_code-ua2021"
          BucketName = "runner"
          BucketLocation = "eu-west-1"
          Insecure = true
---
###### SIDEKIQ SECRETS ######
apiVersion: v1
kind: Secret
metadata:
  name: sidekiq-config
  namespace: code-ua
type: Opaque
stringData:
  gitlab.rb: |
    ########################################
    #####        Services Disabled       ###
    ########################################

    nginx['enable'] = false
    grafana['enable'] = false
    prometheus['enable'] = false
    gitlab_rails['auto_migrate'] = false
    alertmanager['enable'] = false
    gitaly['enable'] = false
    gitlab_workhorse['enable'] = false
    nginx['enable'] = false
    postgres_exporter['enable'] = false
    postgresql['enable'] = false
    redis['enable'] = false
    redis_exporter['enable'] = false
    puma['enable'] = false
    gitlab_exporter['enable'] = false
    prometheus_monitoring['enable'] = false

    ########################################
    ####              Redis              ###
    ########################################

    ## Must be the same in every sentinel node
    redis['master_name'] = 'gitlab-redis'

    ## The same password for Redis authentication you set up for the master node.
    redis['master_password'] = 'redis-meercat'

    ## A list of sentinels with `host` and `port`
    gitlab_rails['redis_sentinels'] = [
        {'host' => 'redis-queues-sentinel-0.redis-queues-sentinel.code-ua', 'port' => 26379},
        {'host' => 'redis-queues-sentinel-1.redis-queues-sentinel.code-ua', 'port' => 26379},
        {'host' => 'redis-queues-sentinel-2.redis-queues-sentinel.code-ua', 'port' => 26379}
      ]

    #######################################
    ###              Gitaly             ###
    #######################################

    git_data_dirs({
      "default" => {
        "gitaly_address" => "tcp://praefect.code-ua:2305"
      }
    })
    gitlab_rails['gitaly_token'] = 'PRAEFECT_EXTERNAL_TOKEN'

    #######################################
    ###            Postgres             ###
    #######################################
    gitlab_rails['db_host'] = 'pgpool.code-ua'
    gitlab_rails['db_database'] = "codeua_production"
    gitlab_rails['db_password'] = 'meercat'
    gitlab_rails['db_port'] = '5432'
    gitlab_rails['db_adapter'] = 'postgresql'
    gitlab_rails['db_encoding'] = 'unicode'
    gitlab_rails['auto_migrate'] = false
    gitlab_rails['db_username'] = "postgres"

    #######################################
    ###      Sidekiq configuration      ###
    #######################################
    sidekiq['listen_address'] = "0.0.0.0"
    sidekiq['cluster'] = true
    sidekiq['queue_groups'] = ['*']

    #######################################
    ###     Monitoring configuration    ###
    #######################################
    consul['enable'] = false

    gitlab_rails['prometheus_address'] = '192.168.0.1:9090'
    node_exporter['listen_address'] = '0.0.0.0:9100'

    