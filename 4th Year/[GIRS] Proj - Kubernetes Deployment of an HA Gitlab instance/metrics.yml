---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: custom-metrics-apiserver
  name: custom-metrics-apiserver
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: custom-metrics-apiserver
  template:
    metadata:
      labels:
        app: custom-metrics-apiserver
      name: custom-metrics-apiserver
    spec:
      serviceAccountName: default
      containers:
      - name: custom-metrics-apiserver
        image: 10.110.0.3:5000/codeua-k8s-prometheus-adapter:v0.4.1
        args:
          - adapter
          - --secure-port=6443
          - --logtostderr=true
          - --cert-dir=/tmp
          - --prometheus-url=http://10.110.4.149:10010/
          - --metrics-relist-interval=30s
          - --v=10
          - --config=/etc/adapter/config.yaml
        ports:
        - containerPort: 6443
        volumeMounts:
        - mountPath: /etc/adapter/config.yaml
          subPath: config.yaml
          name: config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: adapter-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: adapter-config
  namespace: default
data:
  config.yaml: |
    rules:
    - seriesQuery: 'nginx_http_requests_total'
      resources:
        overrides:
          kubernetes_namespace:
            resource: namespace
          kubernetes_pod_name:
            resource: pod
      name:
        matches: "^(.*)_total"
        as: "${1}_per_second"
      metricsQuery: (sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>))
    - seriesQuery: 'nginx_connections_active'
      resources:
        overrides:
          kubernetes_namespace:
            resource: namespace
          kubernetes_pod_name:
            resource: pod
      name:
        matches: "^(.*)"
        as: "${1}"
      metricsQuery: <<.Series>>{<<.LabelMatchers>>}
    - seriesQuery: 'sidekiq_running_jobs'
      resources:
        overrides:
          kubernetes_namespace:
            resource: namespace
          kubernetes_pod_name:
            resource: pod
      name:
        matches: "^(.*)"
        as: "${1}"
      metricsQuery: <<.Series>>{<<.LabelMatchers>>}
    - seriesQuery: 'gitlab_workhorse_http_in_flight_requests'
      resources:
        overrides:
          kubernetes_namespace:
            resource: namespace
          kubernetes_pod_name:
            resource: pod
      name:
        matches: "^(.*)"
        as: "${1}"
      metricsQuery: <<.Series>>{<<.LabelMatchers>>}
---
apiVersion: v1
kind: Service
metadata:
  name: custom-metrics-apiserver
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 6443
  selector:
    app: custom-metrics-apiserver
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: custom-metrics-apiserver
    namespace: default
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 namespace: default
 name: role-metrics-account
rules:
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["pods", "pods/exec", "namespaces"]
  verbs: ["get", "list", "delete", "patch", "create"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: role-metrics-account-binding
 namespace: default
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
 kind: ClusterRole
 name: role-metrics-account
 apiGroup: rbac.authorization.k8s.io
 
